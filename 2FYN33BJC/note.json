{
  "paragraphs": [
    {
      "text": "%md\n# About This Lab\n**Objective:** Explore RDDs tranformations. Load a text file into a \nRDD. Then create a RDD based on website log data. Practice transforming \nthis data. Manipulate device status data in a RDD.\n**Exercise files:** \n    Exercise directory: /home/training/training_materials/devsh/exercises/transform-rdds\n    Data (local): /home/training/training_materials/devsh/data/weblogs\n                  /home/training/training_materials/devsh/data/devicestatus.txt\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Transforming Data with RDDs\n\n---",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.751",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eAbout This Lab\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003eObjective:\u003c/strong\u003e Explore RDDs tranformations. Load a text file into a\n\u003cbr  /\u003eRDD. Then create a RDD based on website log data. Practice transforming\n\u003cbr  /\u003ethis data. Manipulate device status data in a RDD.\n\u003cbr  /\u003e\u003cstrong\u003eExercise files:\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eExercise directory: /home/training/training_materials/devsh/exercises/transform-rdds\nData (local): /home/training/training_materials/devsh/data/weblogs\n              /home/training/training_materials/devsh/data/devicestatus.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eSuccessful outcome:\u003c/strong\u003e\n\u003cbr  /\u003e\u003cstrong\u003eBefore you begin:\u003c/strong\u003e\n\u003cbr  /\u003e\u003cstrong\u003eRelated lessons:\u003c/strong\u003e Transforming Data with RDDs\u003c/p\u003e\n\u003chr /\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262748_-135457113",
      "id": "20171105-200834_1116095891",
      "dateCreated": "2021-01-31 22:14:22.748",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Setup\n---\nThe following cells ensure that this notebook can run from top to bottom without errors any number of times.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.751",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eSetup\u003c/h1\u003e\n\u003chr /\u003e\n\u003cp\u003eThe following cells ensure that this notebook can run from top to bottom without errors any number of times.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262751_-1093965693",
      "id": "20181114-164229_902436001",
      "dateCreated": "2021-01-31 22:14:22.751",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Delete HDFS files to prevent file exist errors",
      "text": "%sh\n\nhdfs dfs -rm -r -f -skipTrash /devsh_loudacre/weblogs\nhdfs dfs -rm -r -f -skipTrash /devsh_loudacre/iplist\nhdfs dfs -rm -r -f -skipTrash /devsh_loudacre/userips_csv\nhdfs dfs -rm -r -f -skipTrash /devsh_loudacre/devicestatus.txt\nhdfs dfs -rm -r -f -skipTrash /devsh_loudacre/devicestatus_etl\nhdfs dfs -rm -r -f -skipTrash /devsh_loudacre/activations\nhdfs dfs -rm -r -f -skipTrash /devsh_loudacre/account-models",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.752",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262752_62699438",
      "id": "20200120-002654_545000747",
      "dateCreated": "2021-01-31 22:14:22.752",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Environment variable required to use SetJobGroup",
      "text": "%sh\n\nPYSPARK_PIN_THREAD\u003dtrue",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.752",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262752_-954856988",
      "id": "20200830-163746_574851316",
      "dateCreated": "2021-01-31 22:14:22.752",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Retrieve the Spark Context",
      "text": "%pyspark\n\nsc \u003d spark.sparkContext",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.754",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cfont color\u003d\"red\"\u003ePrevious livy session is expired, new livy session is created. Paragraphs that depend on this paragraph need to be re-executed!\u003c/font\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262754_478725378",
      "id": "20200830-163851_381275363",
      "dateCreated": "2021-01-31 22:14:22.754",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Lab\n---",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.755",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eLab\u003c/h1\u003e\n\u003chr /\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262754_1620560576",
      "id": "20181114-164844_1661453681",
      "dateCreated": "2021-01-31 22:14:22.754",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Explore the Loudacre Web Log Files",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.755",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eExplore the Loudacre Web Log Files\u003c/h3\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262755_1992542542",
      "id": "20210123-132633_1958534497",
      "dateCreated": "2021-01-31 22:14:22.755",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "1 - View weblogs",
      "text": "%sh\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.756",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_1919532574",
      "id": "20210121-193211_824772981",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "1 - Copy the weblogs directory from the local filesystem to the /devsh_loudacre HDFS directory",
      "text": "%sh\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.756",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_-1325357355",
      "id": "20200120-002607_2067603572",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nIn this section you will be using data in data/weblogs. \nReview one of the .log files in the directory. \nNote the format of the lines and the positions of the IP address, the user ID and the request:\n```pyspark\n234.206.18.239 - 8495 [15/Mar/2014:23:59:30 +0100] \"GET /KBDOC-00082.html HTTP/1.0\" 200 9054 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Titanic 2200\"\n```",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.756",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eIn this section you will be using data in data/weblogs.\n\u003cbr  /\u003eReview one of the .log files in the directory.\n\u003cbr  /\u003eNote the format of the lines and the positions of the IP address, the user ID and the request:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e234.206.18.239 - 8495 [15/Mar/2014:23:59:30 +0100] \"GET /KBDOC-00082.html HTTP/1.0\" 200 9054 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Titanic 2200\"\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_1053503312",
      "id": "20200120-001407_100530890",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "2 - Create an RDD from the uploaded web logs data files in the /devsh_loudacre/weblogs/ directory in HDFS",
      "text": "%pyspark",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.756",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_605969818",
      "id": "20200427-022631_1239569656",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nCreate an RDD containing only lines that are requests for JPG files. \nUse the filter operation with a transformation function that takes a string RDD element and returns a boolean value.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.756",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eCreate an RDD containing only lines that are requests for JPG files.\n\u003cbr  /\u003eUse the filter operation with a transformation function that takes a string RDD element and returns a boolean value.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_1663086314",
      "id": "20200120-003443_338001548",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "3 - Create an RDD containing only lines that are requests for JPG files",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.756",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_1165757302",
      "id": "20200120-003439_334088836",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nUse take to return the first five lines of the data in jpglogsRDD.\nThe return value is a list of strings (in Python) or array of strings (in Scala).",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.756",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eUse take to return the first five lines of the data in jpglogsRDD.\n\u003cbr  /\u003eThe return value is a list of strings (in Python) or array of strings (in Scala).\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_-1550932120",
      "id": "20200120-003633_103234036",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "4 - Use take to return the first five lines of the data in jpglogsRDD",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262756_1004465749",
      "id": "20200120-003630_1845260069",
      "dateCreated": "2021-01-31 22:14:22.756",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "5 - Loop through and display the strings returned by take",
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_-126239846",
      "id": "20200120-003817_1470333727",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nUse the map transformation to define a new RDD. \nStart with a simple map function that returns the length of each line in the log file. \nThis results in an RDD of integers.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eUse the map transformation to define a new RDD.\n\u003cbr  /\u003eStart with a simple map function that returns the length of each line in the log file.\n\u003cbr  /\u003eThis results in an RDD of integers.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_-1487397971",
      "id": "20200120-004513_1072563827",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "6 - Use the map transformation to define a new RDD",
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_400746933",
      "id": "20200120-003816_106556924",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "7 - Loop through and display the first five elements (integers) in the RDD",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_-1920332916",
      "id": "20200120-005134_1951982341",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nCalculating line lengths is not very useful.\nInstead, try mapping each string in logsRDD by splitting the strings based on spaces.\nThe result will be an RDD in which each element is a list of strings (in Python) or an array of strings (in Scala).\nEach string represents a “field” in the weblog line.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eCalculating line lengths is not very useful.\n\u003cbr  /\u003eInstead, try mapping each string in logsRDD by splitting the strings based on spaces.\n\u003cbr  /\u003eThe result will be an RDD in which each element is a list of strings (in Python) or an array of strings (in Scala).\n\u003cbr  /\u003eEach string represents a “field” in the weblog line.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_-226413539",
      "id": "20200120-005426_237657710",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "8 - Create an RDD with all the fields in the weblogs",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_-2060912919",
      "id": "20200120-005423_362634952",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nReturn the first five elements of lineFieldsRDD.\nThe result will be a list of lists of strings (in Python) or an array of arrays of strings (in Scala).",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eReturn the first five elements of lineFieldsRDD.\n\u003cbr  /\u003eThe result will be a list of lists of strings (in Python) or an array of arrays of strings (in Scala).\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_406754649",
      "id": "20200120-011118_1388715961",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "9 - Return the first five elements of lineFieldsRDD",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_-641341931",
      "id": "20200120-011116_592343431",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nDisplay the contents of the return from take. \nUnlike in examples above, which returned collections of simple values (strings and ints), this time you have a set of compound values (arrays or lists containing strings).\nTherefore, to display them properly, you will need to loop through the arrays/lists in lineFields, and then loop through each string in the array/list.\nTo make it easier to read the output, use ------- to separate each set of field values.\nIf you choose to copy and paste the Pyspark code below, it may not automatically indent properly; be sure the indentation is correct before executing the command.\n\n```pyspark\nfor fields in lineFields: \n    print \"-------\"\n    for field in fields: print field\n```",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eDisplay the contents of the return from take.\n\u003cbr  /\u003eUnlike in examples above, which returned collections of simple values (strings and ints), this time you have a set of compound values (arrays or lists containing strings).\n\u003cbr  /\u003eTherefore, to display them properly, you will need to loop through the arrays/lists in lineFields, and then loop through each string in the array/list.\n\u003cbr  /\u003eTo make it easier to read the output, use \u0026mdash;\u0026mdash;- to separate each set of field values.\n\u003cbr  /\u003eIf you choose to copy and paste the Pyspark code below, it may not automatically indent properly; be sure the indentation is correct before executing the command.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003efor fields in lineFields: \n    print \"-------\"\n    for field in fields: print field\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_1581646180",
      "id": "20200120-011443_2110736945",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "10  - Display the contents of the return from take",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_-1196011493",
      "id": "20200120-011952_1094164574",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nNow that you know how map works, create a new RDD containing just the IP addresses from each line in the log file.\n(The IP address is the first space-delimited field in each line.)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.757",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eNow that you know how map works, create a new RDD containing just the IP addresses from each line in the log file.\n\u003cbr  /\u003e(The IP address is the first space-delimited field in each line.)\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_1837461438",
      "id": "20200120-012127_564830964",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "11 - Create a new RDD containing just the IP addresses from each line in the log file",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262757_90960269",
      "id": "20200120-012107_1817300829",
      "dateCreated": "2021-01-31 22:14:22.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "12 - Finally, save the list of IP addresses as a text file",
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_-1218331215",
      "id": "20200120-014121_1097860708",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n* **Note:** If you re-run this command, you will not be able to save to the same directory because it already exists. \nBe sure to delete the directory in HDFS before saving again.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNote:\u003c/strong\u003e If you re-run this command, you will not be able to save to the same directory because it already exists.\n\u003cbr  /\u003eBe sure to delete the directory in HDFS before saving again.\u003c/li\u003e\n\u003c/ul\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1691654102",
      "id": "20200120-014229_413886056",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nList the contents of the /devsh_loudacre/iplist HDFS folder. \nReview the contents of one of the files to confirm that they were created correctly.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList the contents of the /devsh_loudacre/iplist HDFS folder.\n\u003cbr  /\u003eReview the contents of one of the files to confirm that they were created correctly.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_-1712280141",
      "id": "20200120-014333_1539770074",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "13 - Confirm the files were created correctly",
      "text": "%sh\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1627405532",
      "id": "20200120-014756_280265899",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Map Weblog Entries to IP Address/User ID Pairs\n\nUse RDD transformations to create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file.\n(Filter for files with the .html extension; disregard requests for other file types.)\nThe user ID is the third field in each log file line. \nSave the data into a comma-separated text file in the directory /devsh_loudacre/userips_csv. \nMake sure the data is saved in the form of comma-separated strings:\n```pyspark\n165.32.101.206,8\n100.219.90.44,102\n182.4.148.56,173 \n246.241.6.175,45395 \n175.223.172.207,4115\n...\n```",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eMap Weblog Entries to IP Address/User ID Pairs\u003c/h3\u003e\n\u003cp\u003eUse RDD transformations to create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file.\n\u003cbr  /\u003e(Filter for files with the .html extension; disregard requests for other file types.)\n\u003cbr  /\u003eThe user ID is the third field in each log file line.\n\u003cbr  /\u003eSave the data into a comma-separated text file in the directory /devsh_loudacre/userips_csv.\n\u003cbr  /\u003eMake sure the data is saved in the form of comma-separated strings:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e165.32.101.206,8\n100.219.90.44,102\n182.4.148.56,173 \n246.241.6.175,45395 \n175.223.172.207,4115\n...\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1595723108",
      "id": "20200120-015000_1493350475",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "14 - Create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_302139441",
      "id": "20200120-015332_367658291",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nNow that the data is in CSV format, it can easily be used by Spark SQL. ",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eNow that the data is in CSV format, it can easily be used by Spark SQL.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_-2057038628",
      "id": "20200120-020340_581649922",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "15 - Load the new CSV files in /devsh_loudacre/userips_csv created above into a DataFrame, then view the data and schema",
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1235615408",
      "id": "20200120-020334_593860337",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Bonus Exercise 1: Clean Device Status Data\nIf you have more time, attempt this extra bonus exercise.\nOne common use of core Spark RDDs is data scrubbing—converting the data into a format that can be used in Spark SQL.\nIn this bonus exercise, you will process data in order to get it into a standardized format for later processing.\nReview the contents of the file /home/trainingtraining_materials/devsh/data/devicestatus.txt. \nThis file contains data collected from mobile devices on Loudacre’s network, including device ID, current status, location, and so on. \nBecause Loudacre previously acquired other mobile providers’ networks, the data from different subnetworks has different formats. \nNote that the records in this file have different field delimiters: some use commas, some use pipes (|), and so on. \n```pyspark\n2014-03-15:10:10:33,Ronin S2,1a7eca8d-60c9-4d25-8609-d6cfd1ac80a1,0,24,82,72,enabled,enabled,enabled,41,62,36.49259162,-121.003629078\n2014-03-15:10:10:33/Titanic 2300/d86dbb9d-ff3c-40c6-8685-01f1fac45d9f/59/83/9/3/28/0/enabled/disabled/enabled/34.3456792864/-117.768326105\n```\n\n\nYour task is the following:",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eBonus Exercise 1: Clean Device Status Data\u003c/h3\u003e\n\u003cp\u003eIf you have more time, attempt this extra bonus exercise.\n\u003cbr  /\u003eOne common use of core Spark RDDs is data scrubbing—converting the data into a format that can be used in Spark SQL.\n\u003cbr  /\u003eIn this bonus exercise, you will process data in order to get it into a standardized format for later processing.\n\u003cbr  /\u003eReview the contents of the file /home/trainingtraining_materials/devsh/data/devicestatus.txt.\n\u003cbr  /\u003eThis file contains data collected from mobile devices on Loudacre’s network, including device ID, current status, location, and so on.\n\u003cbr  /\u003eBecause Loudacre previously acquired other mobile providers’ networks, the data from different subnetworks has different formats.\n\u003cbr  /\u003eNote that the records in this file have different field delimiters: some use commas, some use pipes (|), and so on.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e2014-03-15:10:10:33,Ronin S2,1a7eca8d-60c9-4d25-8609-d6cfd1ac80a1,0,24,82,72,enabled,enabled,enabled,41,62,36.49259162,-121.003629078\n2014-03-15:10:10:33/Titanic 2300/d86dbb9d-ff3c-40c6-8685-01f1fac45d9f/59/83/9/3/28/0/enabled/disabled/enabled/34.3456792864/-117.768326105\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYour task is the following:\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1885362637",
      "id": "20200120-021127_1045532948",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "16 - Upload the devicestatus.txt file to HDFS",
      "text": "%sh\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1981523136",
      "id": "20200120-021126_2118624277",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nIn order to clean up  the data, you will have to perform the following tasks:\n\n* Determine which delimiter to use (the 20th character—position 19—is the first use of the delimiter).\n* Filter out any records which do not parse correctly (hint: each record should have exactly 14 values).\n* Extract the date (first field), model (second field), device ID (third field), and latitude and longitude (13th and 14th fields respectively).",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eIn order to clean up  the data, you will have to perform the following tasks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDetermine which delimiter to use (the 20th character—position 19—is the first use of the delimiter).\u003c/li\u003e\n\u003cli\u003eFilter out any records which do not parse correctly (hint: each record should have exactly 14 values).\u003c/li\u003e\n\u003cli\u003eExtract the date (first field), model (second field), device ID (third field), and latitude and longitude (13th and 14th fields respectively).\u003c/li\u003e\n\u003c/ul\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1413044063",
      "id": "20200120-022616_1171418589",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "17 - Clean up  the data",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.758",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262758_1827510282",
      "id": "20200120-022211_1079196563",
      "dateCreated": "2021-01-31 22:14:22.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe second field contains the device manufacturer and model name (such as Ronin S2).\nSplit this field by spaces to separate the manufacturer from the model (for example, manufacturer Ronin, model S2). \nKeep just the manufacturer name.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.759",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eThe second field contains the device manufacturer and model name (such as Ronin S2).\n\u003cbr  /\u003eSplit this field by spaces to separate the manufacturer from the model (for example, manufacturer Ronin, model S2).\n\u003cbr  /\u003eKeep just the manufacturer name.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262759_844552992",
      "id": "20200120-023344_707527528",
      "dateCreated": "2021-01-31 22:14:22.759",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "18 - Create a new RDD containing date, manufacturer, device ID, latitude and longitude",
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262759_1437838967",
      "id": "20200120-023314_452836886",
      "dateCreated": "2021-01-31 22:14:22.759",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "19 - Save the extracted data to comma-delimited text files in the /devsh_loudacre/devicestatus_etl directory on HDFS",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_-1817628859",
      "id": "20200120-023503_1615260981",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe lines in the file should all look similar to this, with all fields delimited by commas.\n```pyspark\n 2014-03-15:10:10:20,Sorrento,8cc3b47e-bd01-4482- b500-28f2342679af,33.6894754264,-117.543308253\n```",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eThe lines in the file should all look similar to this, with all fields delimited by commas.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e 2014-03-15:10:10:20,Sorrento,8cc3b47e-bd01-4482- b500-28f2342679af,33.6894754264,-117.543308253\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_79686531",
      "id": "20200120-023848_1552432120",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "20 - Confirm that the data in the file(s) was saved correctly.",
      "text": "%sh\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_-1910897893",
      "id": "20200120-023845_483737466",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Bonus Exercise 2: Convert Multi-line XML files to CSV files\nOne of the common uses for RDDs in core Spark is to transform data from unstructured or semi-structured sources or formats that are not supported by Spark SQL to structured formats you can use with Spark SQL.\nIn this bonus exercise, you will convert a set of whole-file XML records to a CSV file that can be read into a DataFrame.\nReview the data on the local Linux filesystem in the directory /home/training/training_materials/devsh/data/activations. \nEach XML file contains data for all the devices activated by customers during a specific month.\nSample input data:\n```xml\n\u003cactivations\u003e\n\u003cactivation timestamp\u003d\"1225499258\" type\u003d\"phone\"\u003e\n\u003caccount-number\u003e316\u003c/account-number\u003e\n\u003cdevice-id\u003e d61b6971-33e1-42f0-bb15-aa2ae3cd8680\n\u003c/device-id\u003e \u003cphone-number\u003e5108307062\u003c/phone-number\u003e \u003cmodel\u003eiFruit 1\u003c/model\u003e\n   \u003c/activation\u003e\n...\n\u003c/activations\u003e\n```",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eBonus Exercise 2: Convert Multi-line XML files to CSV files\u003c/h3\u003e\n\u003cp\u003eOne of the common uses for RDDs in core Spark is to transform data from unstructured or semi-structured sources or formats that are not supported by Spark SQL to structured formats you can use with Spark SQL.\n\u003cbr  /\u003eIn this bonus exercise, you will convert a set of whole-file XML records to a CSV file that can be read into a DataFrame.\n\u003cbr  /\u003eReview the data on the local Linux filesystem in the directory /home/training/training_materials/devsh/data/activations.\n\u003cbr  /\u003eEach XML file contains data for all the devices activated by customers during a specific month.\n\u003cbr  /\u003eSample input data:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"xml\"\u003e\u0026lt;activations\u0026gt;\n\u0026lt;activation timestamp\u003d\"1225499258\" type\u003d\"phone\"\u0026gt;\n\u0026lt;account-number\u0026gt;316\u0026lt;/account-number\u0026gt;\n\u0026lt;device-id\u0026gt; d61b6971-33e1-42f0-bb15-aa2ae3cd8680\n\u0026lt;/device-id\u0026gt; \u0026lt;phone-number\u0026gt;5108307062\u0026lt;/phone-number\u0026gt; \u0026lt;model\u0026gt;iFruit 1\u0026lt;/model\u0026gt;\n   \u0026lt;/activation\u0026gt;\n...\n\u0026lt;/activations\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_482020370",
      "id": "20200120-024539_1586366154",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "21 - Copy the entire activations directory to /devsh_loudacre in HDFS",
      "text": "%sh\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_-600189178",
      "id": "20200120-024955_1346939274",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nCopy and paste the following code in the cell below to define convenience functions\n```pyspark\nimport xml.etree.ElementTree as ElementTree\n\n# Given a string containing XML, parse the string, and \n# return an iterator of activation XML records (Elements) contained in the string\n\ndef getActivations(s):\n    filetree \u003d ElementTree.fromstring(s)\n    return filetree.getiterator(\u0027activation\u0027)\n    \n# Given an activation record (XML Element), return the model name\ndef getModel(activation):\n    return activation.find(\u0027model\u0027).text \n\n# Given an activation record (XML Element), return the account number \ndef getAccount(activation):\n    return activation.find(\u0027account-number\u0027).text \n```",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eCopy and paste the following code in the cell below to define convenience functions\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003eimport xml.etree.ElementTree as ElementTree\n\n# Given a string containing XML, parse the string, and \n# return an iterator of activation XML records (Elements) contained in the string\n\ndef getActivations(s):\n    filetree \u003d ElementTree.fromstring(s)\n    return filetree.getiterator(\u0027activation\u0027)\n\n# Given an activation record (XML Element), return the model name\ndef getModel(activation):\n    return activation.find(\u0027model\u0027).text \n\n# Given an activation record (XML Element), return the account number \ndef getAccount(activation):\n    return activation.find(\u0027account-number\u0027).text \n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_1465760330",
      "id": "20200120-025508_282291001",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "22 - Define convenience functions",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.767",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_-114805229",
      "id": "20200120-025800_726122067",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nUse wholeTextFiles to create an RDD from the activations dataset. \nThe resulting RDD will consist of tuples, in which the first value is the name of the file, and the second value is the contents of the file (XML) as a string.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eUse wholeTextFiles to create an RDD from the activations dataset.\n\u003cbr  /\u003eThe resulting RDD will consist of tuples, in which the first value is the name of the file, and the second value is the contents of the file (XML) as a string.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262767_789618286",
      "id": "20200120-030018_1588727125",
      "dateCreated": "2021-01-31 22:14:22.767",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "23 - Use wholeTextFiles to create an RDD from the activations dataset",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_-208105812",
      "id": "20200120-030100_1582491897",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nEach XML file can contain many activation records; use flatMap to map the contents of each file to a collection of XML records by calling the provided getActivations function.\ngetActivations takes an XML string, parses it, and returns a collection of XML records; flatMap maps each record to a separate RDD element.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eEach XML file can contain many activation records; use flatMap to map the contents of each file to a collection of XML records by calling the provided getActivations function.\n\u003cbr  /\u003egetActivations takes an XML string, parses it, and returns a collection of XML records; flatMap maps each record to a separate RDD element.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_-427182539",
      "id": "20200120-030327_385020183",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "24 - Parse each file (as a string) into a collection of activation XML records",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_-734695452",
      "id": "20200120-030432_330347850",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nMap each activation record to a string in the format account-number:model.\nUse the provided getAccount and getModel functions to find the values from the activation record.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eMap each activation record to a string in the format account-number:model.\n\u003cbr  /\u003eUse the provided getAccount and getModel functions to find the values from the activation record.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_1959621451",
      "id": "20200120-030631_196413858",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "25 - Map each activation record to a string in the format account-number:model",
      "text": "%pyspark\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_-355958626",
      "id": "20200120-030628_952569635",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "26 - Save the formatted strings to a text file in the directory /devsh_loudacre/ account-models",
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_-1009911382",
      "id": "20200120-030852_1771925889",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Result\n**You have now:** \n\n* loaded a simple text file into a Resilient Distributed Dataset (RDD),\n* created an RDD based on Loudacre’s website log data and \n* practiced transforming the data.\n\n---",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eResult\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003eYou have now:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eloaded a simple text file into a Resilient Distributed Dataset (RDD),\u003c/li\u003e\n\u003cli\u003ecreated an RDD based on Loudacre’s website log data and\u003c/li\u003e\n\u003cli\u003epracticed transforming the data.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr /\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_1372012971",
      "id": "20181119-142716_792318228",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Solution\n---",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eSolution\u003c/h1\u003e\n\u003chr /\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_-577134311",
      "id": "20171113-155535_1769142099",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Explore the Loudacre Web Log Files",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.768",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eExplore the Loudacre Web Log Files\u003c/h3\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_1941646691",
      "id": "20210123-132811_826159894",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "1 - Copy the weblogs directory from the local filesystem to the /devsh_loudacre HDFS directory",
      "text": "%sh\nhdfs dfs -rm -r -skipTrash /devsh_loudacre/weblogs\nhdfs dfs -put /home/training/training_materials/devsh/data/weblogs /devsh_loudacre\nhdfs dfs -ls /devsh_loudacre/weblogs",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "rm: `/devsh_loudacre/weblogs\u0027: No such file or directory\nFound 182 items\n-rw-r--r--   3 zeppelin supergroup     521343 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-15.log\n-rw-r--r--   3 zeppelin supergroup     484079 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-16.log\n-rw-r--r--   3 zeppelin supergroup     527399 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-17.log\n-rw-r--r--   3 zeppelin supergroup     485105 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-18.log\n-rw-r--r--   3 zeppelin supergroup     508553 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-19.log\n-rw-r--r--   3 zeppelin supergroup     492134 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-20.log\n-rw-r--r--   3 zeppelin supergroup     489117 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-21.log\n-rw-r--r--   3 zeppelin supergroup     535780 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-22.log\n-rw-r--r--   3 zeppelin supergroup     501768 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-23.log\n-rw-r--r--   3 zeppelin supergroup     489344 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-24.log\n-rw-r--r--   3 zeppelin supergroup     487857 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-25.log\n-rw-r--r--   3 zeppelin supergroup     523186 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-26.log\n-rw-r--r--   3 zeppelin supergroup     506195 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-27.log\n-rw-r--r--   3 zeppelin supergroup     492600 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-28.log\n-rw-r--r--   3 zeppelin supergroup     481479 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-29.log\n-rw-r--r--   3 zeppelin supergroup     525367 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-09-30.log\n-rw-r--r--   3 zeppelin supergroup     484920 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-01.log\n-rw-r--r--   3 zeppelin supergroup     527452 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-02.log\n-rw-r--r--   3 zeppelin supergroup     521262 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-03.log\n-rw-r--r--   3 zeppelin supergroup     498950 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-04.log\n-rw-r--r--   3 zeppelin supergroup     510510 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-05.log\n-rw-r--r--   3 zeppelin supergroup     489554 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-06.log\n-rw-r--r--   3 zeppelin supergroup     489616 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-07.log\n-rw-r--r--   3 zeppelin supergroup     523298 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-08.log\n-rw-r--r--   3 zeppelin supergroup     529434 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-09.log\n-rw-r--r--   3 zeppelin supergroup     521604 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-10.log\n-rw-r--r--   3 zeppelin supergroup     524138 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-11.log\n-rw-r--r--   3 zeppelin supergroup     517782 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-12.log\n-rw-r--r--   3 zeppelin supergroup     522873 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-13.log\n-rw-r--r--   3 zeppelin supergroup     496593 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-14.log\n-rw-r--r--   3 zeppelin supergroup     495224 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-15.log\n-rw-r--r--   3 zeppelin supergroup     521024 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-16.log\n-rw-r--r--   3 zeppelin supergroup     500818 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-17.log\n-rw-r--r--   3 zeppelin supergroup     501154 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-18.log\n-rw-r--r--   3 zeppelin supergroup     527543 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-19.log\n-rw-r--r--   3 zeppelin supergroup     518589 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-20.log\n-rw-r--r--   3 zeppelin supergroup     512893 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-21.log\n-rw-r--r--   3 zeppelin supergroup     518030 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-22.log\n-rw-r--r--   3 zeppelin supergroup     492463 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-23.log\n-rw-r--r--   3 zeppelin supergroup     492054 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-24.log\n-rw-r--r--   3 zeppelin supergroup     533207 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-25.log\n-rw-r--r--   3 zeppelin supergroup     503777 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-26.log\n-rw-r--r--   3 zeppelin supergroup     503420 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-27.log\n-rw-r--r--   3 zeppelin supergroup     524048 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-28.log\n-rw-r--r--   3 zeppelin supergroup     510800 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-29.log\n-rw-r--r--   3 zeppelin supergroup     523180 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-30.log\n-rw-r--r--   3 zeppelin supergroup     524277 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-10-31.log\n-rw-r--r--   3 zeppelin supergroup     969586 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-01.log\n-rw-r--r--   3 zeppelin supergroup    1061868 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-02.log\n-rw-r--r--   3 zeppelin supergroup    1093742 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-03.log\n-rw-r--r--   3 zeppelin supergroup     956153 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-04.log\n-rw-r--r--   3 zeppelin supergroup    1085429 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-05.log\n-rw-r--r--   3 zeppelin supergroup    1071334 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-06.log\n-rw-r--r--   3 zeppelin supergroup    1038115 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-07.log\n-rw-r--r--   3 zeppelin supergroup    1078367 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-08.log\n-rw-r--r--   3 zeppelin supergroup     970029 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-09.log\n-rw-r--r--   3 zeppelin supergroup    1095755 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-10.log\n-rw-r--r--   3 zeppelin supergroup     977765 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-11.log\n-rw-r--r--   3 zeppelin supergroup     970149 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-12.log\n-rw-r--r--   3 zeppelin supergroup    1039116 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-13.log\n-rw-r--r--   3 zeppelin supergroup    1081771 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-14.log\n-rw-r--r--   3 zeppelin supergroup     982380 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-15.log\n-rw-r--r--   3 zeppelin supergroup    1009713 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-16.log\n-rw-r--r--   3 zeppelin supergroup    1086494 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-17.log\n-rw-r--r--   3 zeppelin supergroup     978348 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-18.log\n-rw-r--r--   3 zeppelin supergroup    1083789 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-19.log\n-rw-r--r--   3 zeppelin supergroup    1009470 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-20.log\n-rw-r--r--   3 zeppelin supergroup    1057086 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-21.log\n-rw-r--r--   3 zeppelin supergroup     975288 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-22.log\n-rw-r--r--   3 zeppelin supergroup    1063118 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-23.log\n-rw-r--r--   3 zeppelin supergroup    1048393 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-24.log\n-rw-r--r--   3 zeppelin supergroup     974776 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-25.log\n-rw-r--r--   3 zeppelin supergroup     962392 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-26.log\n-rw-r--r--   3 zeppelin supergroup     976234 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-27.log\n-rw-r--r--   3 zeppelin supergroup     976027 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-28.log\n-rw-r--r--   3 zeppelin supergroup    1081953 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-29.log\n-rw-r--r--   3 zeppelin supergroup    1006926 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-11-30.log\n-rw-r--r--   3 zeppelin supergroup    1014795 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-01.log\n-rw-r--r--   3 zeppelin supergroup    1093271 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-02.log\n-rw-r--r--   3 zeppelin supergroup    1068328 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-03.log\n-rw-r--r--   3 zeppelin supergroup    1070066 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-04.log\n-rw-r--r--   3 zeppelin supergroup    1028342 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-05.log\n-rw-r--r--   3 zeppelin supergroup    1031373 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-06.log\n-rw-r--r--   3 zeppelin supergroup    1018063 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-07.log\n-rw-r--r--   3 zeppelin supergroup    1039394 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-08.log\n-rw-r--r--   3 zeppelin supergroup    1101053 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-09.log\n-rw-r--r--   3 zeppelin supergroup    1009430 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-10.log\n-rw-r--r--   3 zeppelin supergroup    1061891 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-11.log\n-rw-r--r--   3 zeppelin supergroup    1030641 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-12.log\n-rw-r--r--   3 zeppelin supergroup    1028946 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-13.log\n-rw-r--r--   3 zeppelin supergroup     985819 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-14.log\n-rw-r--r--   3 zeppelin supergroup    1080787 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-15.log\n-rw-r--r--   3 zeppelin supergroup    1004498 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-16.log\n-rw-r--r--   3 zeppelin supergroup    1078566 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-17.log\n-rw-r--r--   3 zeppelin supergroup    1069630 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-18.log\n-rw-r--r--   3 zeppelin supergroup    1050695 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-19.log\n-rw-r--r--   3 zeppelin supergroup    1108042 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-20.log\n-rw-r--r--   3 zeppelin supergroup     986692 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-21.log\n-rw-r--r--   3 zeppelin supergroup    1045723 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-22.log\n-rw-r--r--   3 zeppelin supergroup     990531 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-23.log\n-rw-r--r--   3 zeppelin supergroup    1059352 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-24.log\n-rw-r--r--   3 zeppelin supergroup     980457 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-25.log\n-rw-r--r--   3 zeppelin supergroup    1054182 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-26.log\n-rw-r--r--   3 zeppelin supergroup    1017134 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-27.log\n-rw-r--r--   3 zeppelin supergroup    1064484 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-28.log\n-rw-r--r--   3 zeppelin supergroup    1022151 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-29.log\n-rw-r--r--   3 zeppelin supergroup    1070391 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-30.log\n-rw-r--r--   3 zeppelin supergroup     992528 2021-01-23 13:30 /devsh_loudacre/weblogs/2013-12-31.log\n-rw-r--r--   3 zeppelin supergroup    1057534 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-01.log\n-rw-r--r--   3 zeppelin supergroup    1053566 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-02.log\n-rw-r--r--   3 zeppelin supergroup     981998 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-03.log\n-rw-r--r--   3 zeppelin supergroup    1100898 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-04.log\n-rw-r--r--   3 zeppelin supergroup    1012644 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-05.log\n-rw-r--r--   3 zeppelin supergroup    1094868 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-06.log\n-rw-r--r--   3 zeppelin supergroup    1094753 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-07.log\n-rw-r--r--   3 zeppelin supergroup    1037422 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-08.log\n-rw-r--r--   3 zeppelin supergroup    1032385 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-09.log\n-rw-r--r--   3 zeppelin supergroup     977679 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-10.log\n-rw-r--r--   3 zeppelin supergroup     993697 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-11.log\n-rw-r--r--   3 zeppelin supergroup    1073307 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-12.log\n-rw-r--r--   3 zeppelin supergroup    1048789 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-13.log\n-rw-r--r--   3 zeppelin supergroup    1001350 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-14.log\n-rw-r--r--   3 zeppelin supergroup    1048617 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-15.log\n-rw-r--r--   3 zeppelin supergroup     996816 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-16.log\n-rw-r--r--   3 zeppelin supergroup    1044827 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-17.log\n-rw-r--r--   3 zeppelin supergroup     972872 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-18.log\n-rw-r--r--   3 zeppelin supergroup     975136 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-19.log\n-rw-r--r--   3 zeppelin supergroup    1020891 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-20.log\n-rw-r--r--   3 zeppelin supergroup    1011424 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-21.log\n-rw-r--r--   3 zeppelin supergroup    1109304 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-22.log\n-rw-r--r--   3 zeppelin supergroup     976011 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-23.log\n-rw-r--r--   3 zeppelin supergroup    1061764 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-24.log\n-rw-r--r--   3 zeppelin supergroup    1072204 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-25.log\n-rw-r--r--   3 zeppelin supergroup    1065979 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-26.log\n-rw-r--r--   3 zeppelin supergroup    1096363 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-27.log\n-rw-r--r--   3 zeppelin supergroup    1083865 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-28.log\n-rw-r--r--   3 zeppelin supergroup    1012968 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-29.log\n-rw-r--r--   3 zeppelin supergroup    1081064 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-30.log\n-rw-r--r--   3 zeppelin supergroup    1101529 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-01-31.log\n-rw-r--r--   3 zeppelin supergroup    1053099 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-01.log\n-rw-r--r--   3 zeppelin supergroup    1067044 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-02.log\n-rw-r--r--   3 zeppelin supergroup    1003003 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-03.log\n-rw-r--r--   3 zeppelin supergroup    1017259 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-04.log\n-rw-r--r--   3 zeppelin supergroup    1005783 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-05.log\n-rw-r--r--   3 zeppelin supergroup    1065257 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-06.log\n-rw-r--r--   3 zeppelin supergroup     996107 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-07.log\n-rw-r--r--   3 zeppelin supergroup    1035289 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-08.log\n-rw-r--r--   3 zeppelin supergroup    1065078 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-09.log\n-rw-r--r--   3 zeppelin supergroup    1044403 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-10.log\n-rw-r--r--   3 zeppelin supergroup    1057235 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-11.log\n-rw-r--r--   3 zeppelin supergroup    1091711 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-12.log\n-rw-r--r--   3 zeppelin supergroup    1096726 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-13.log\n-rw-r--r--   3 zeppelin supergroup    1072065 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-14.log\n-rw-r--r--   3 zeppelin supergroup    1010563 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-15.log\n-rw-r--r--   3 zeppelin supergroup    1056078 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-16.log\n-rw-r--r--   3 zeppelin supergroup     994481 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-17.log\n-rw-r--r--   3 zeppelin supergroup    1019882 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-18.log\n-rw-r--r--   3 zeppelin supergroup     992774 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-19.log\n-rw-r--r--   3 zeppelin supergroup     992721 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-20.log\n-rw-r--r--   3 zeppelin supergroup    1024612 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-21.log\n-rw-r--r--   3 zeppelin supergroup    1060506 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-22.log\n-rw-r--r--   3 zeppelin supergroup    1017947 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-23.log\n-rw-r--r--   3 zeppelin supergroup    1104389 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-24.log\n-rw-r--r--   3 zeppelin supergroup    1018667 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-25.log\n-rw-r--r--   3 zeppelin supergroup    1076821 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-26.log\n-rw-r--r--   3 zeppelin supergroup    1090745 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-27.log\n-rw-r--r--   3 zeppelin supergroup     975382 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-02-28.log\n-rw-r--r--   3 zeppelin supergroup    1004630 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-01.log\n-rw-r--r--   3 zeppelin supergroup    1005688 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-02.log\n-rw-r--r--   3 zeppelin supergroup     981270 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-03.log\n-rw-r--r--   3 zeppelin supergroup     968023 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-04.log\n-rw-r--r--   3 zeppelin supergroup    1006960 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-05.log\n-rw-r--r--   3 zeppelin supergroup    1014931 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-06.log\n-rw-r--r--   3 zeppelin supergroup    1103088 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-07.log\n-rw-r--r--   3 zeppelin supergroup    1001566 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-08.log\n-rw-r--r--   3 zeppelin supergroup     995517 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-09.log\n-rw-r--r--   3 zeppelin supergroup    1091560 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-10.log\n-rw-r--r--   3 zeppelin supergroup    1038692 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-11.log\n-rw-r--r--   3 zeppelin supergroup    1047117 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-12.log\n-rw-r--r--   3 zeppelin supergroup     997473 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-13.log\n-rw-r--r--   3 zeppelin supergroup     994147 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-14.log\n-rw-r--r--   3 zeppelin supergroup    1074872 2021-01-23 13:30 /devsh_loudacre/weblogs/2014-03-15.log\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262768_1435764713",
      "id": "20200120-002914_1069892138",
      "dateCreated": "2021-01-31 22:14:22.768",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "",
      "text": "%sh\nhdfs dfs -head /devsh_loudacre/weblogs/2013-09-15.log",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "3.94.78.5 - 69827 [15/Sep/2013:23:58:36 +0100] \"GET /KBDOC-00033.html HTTP/1.0\" 200 14417 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser iFruit 1\"\n3.94.78.5 - 69827 [15/Sep/2013:23:58:36 +0100] \"GET /theme.css HTTP/1.0\" 200 3576 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser iFruit 1\"\n19.38.140.62 - 21475 [15/Sep/2013:23:58:34 +0100] \"GET /KBDOC-00277.html HTTP/1.0\" 200 15517 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Ronin S1\"\n19.38.140.62 - 21475 [15/Sep/2013:23:58:34 +0100] \"GET /theme.css HTTP/1.0\" 200 13353 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Ronin S1\"\n129.133.56.105 - 2489 [15/Sep/2013:23:58:34 +0100] \"GET /KBDOC-00033.html HTTP/1.0\" 200 10590 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Sorrento F00L\"\n129.133.56.105 - 2489 [15/Sep/2013:23:58:34 +0100] \"GET /theme.css HTTP/1.0\" 200 12295 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Sorrento F00L\"\n217.150.149.167 - 4712 [15/Sep/2013:23:56:06 +0100] \"GET /ronin_s4_sales.html HTTP/1.0\" 200 845 \"http://www.lo"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_2095404899",
      "id": "20210121-193418_1702996012",
      "dateCreated": "2021-01-31 22:14:22.769",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nIn this section you will be using data in data/weblogs. \nReview one of the .log files in the directory. \nNote the format of the lines and the positions of the IP address, the user ID and the request:\n```pyspark\n234.206.18.239 - 8495 [15/Mar/2014:23:59:30 +0100] \"GET /KBDOC-00082.html HTTP/1.0\" 200 9054 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Titanic 2200\"\n```\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eIn this section you will be using data in data/weblogs.\n\u003cbr  /\u003eReview one of the .log files in the directory.\n\u003cbr  /\u003eNote the format of the lines and the positions of the IP address, the user ID and the request:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e234.206.18.239 - 8495 [15/Mar/2014:23:59:30 +0100] \"GET /KBDOC-00082.html HTTP/1.0\" 200 9054 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Titanic 2200\"\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_-1653296901",
      "id": "20210121-193342_534743466",
      "dateCreated": "2021-01-31 22:14:22.769",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "2 - Create an RDD from the uploaded web logs data files in the /devsh_loudacre/weblogs/ directory in HDFS",
      "text": "%pyspark\n\ningestRDD \u003d sc.textFile(\"/mine/data-100.json\")\nfor line in ingestRDD.take(35): print(line)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:17:30.722",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{\n        \"_index\" : \".corelight-conn-2020.06.15-15851847906376601724\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"yYrAuHIBLPh0KG6dzhLM\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"@path\" : \"conn\",\n          \"@sensor\" : \"sensor_172_17_1_21\",\n          \"@timestamp\" : \"2020-06-15T16:12:28.636442Z\",\n          \"ts\" : \"2020-06-15T16:12:23.327254Z\",\n          \"uid\" : \"CgA9reVdl5BOwlFv5\",\n          \"id.orig_h\" : \"172.17.1.21\",\n          \"id.orig_p\" : 47132,\n          \"id.resp_h\" : \"172.17.1.20\",\n          \"id.resp_p\" : 8443,\n          \"proto\" : \"tcp\",\n          \"service\" : \"ssl\",\n          \"duration\" : 0.043824,\n          \"orig_bytes\" : 3795,\n          \"resp_bytes\" : 5622,\n          \"conn_state\" : \"SF\",\n          \"missed_bytes\" : 0,\n          \"history\" : \"ShADadTtFf\",\n          \"orig_pkts\" : 30,\n          \"orig_ip_bytes\" : 9166,\n          \"resp_pkts\" : 22,\n          \"resp_ip_bytes\" : 12404,\n          \"orig_l2_addr\" : \"3c:ec:ef:02:35:d6\",\n          \"resp_l2_addr\" : \"00:50:56:95:90:ca\"\n        }\n      },\n      {\n        \"_index\" : \".corelight-conn-2020.06.15-15851847906376601724\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"3_XAuHIBeiPvJqGI08xA\",\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_-1596886019",
      "id": "20200120-003233_234329874",
      "dateCreated": "2021-01-31 22:14:22.769",
      "dateStarted": "2021-01-31 22:17:30.896",
      "dateFinished": "2021-01-31 22:17:33.373",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "3 - Create an RDD containing only lines that are requests for JPG files",
      "text": "%pyspark\n\njpglogsRDD \u003d logsRDD.filter(lambda line: \".jpg\" in line)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_-782539445",
      "id": "20200120-003530_1847608903",
      "dateCreated": "2021-01-31 22:14:22.769",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nCreate an RDD containing only lines that are requests for JPG files. \nUse the filter operation with a transformation function that takes a string RDD element and returns a boolean value.\n\nThe `filter` function matches records to the input.\n\nThis requires the use of a Python Lambda function. A Lambda function is a small anonymous function. \nIt can take any number of arguments, but can only have one expression.\n\nsyntax \n`lambda arguments: expression`\nexample\n`x \u003d lambda a: a + 10`\n`print(x(5))`\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eCreate an RDD containing only lines that are requests for JPG files.\n\u003cbr  /\u003eUse the filter operation with a transformation function that takes a string RDD element and returns a boolean value.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003efilter\u003c/code\u003e function matches records to the input.\u003c/p\u003e\n\u003cp\u003eThis requires the use of a Python Lambda function. A Lambda function is a small anonymous function.\n\u003cbr  /\u003eIt can take any number of arguments, but can only have one expression.\u003c/p\u003e\n\u003cp\u003esyntax\n\u003cbr  /\u003e\u003ccode\u003elambda arguments: expression\u003c/code\u003e\n\u003cbr  /\u003eexample\n\u003cbr  /\u003e\u003ccode\u003ex \u003d lambda a: a + 10\u003c/code\u003e\n\u003cbr  /\u003e\u003ccode\u003eprint(x(5))\u003c/code\u003e\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_-202155049",
      "id": "20210121-193603_2086199572",
      "dateCreated": "2021-01-31 22:14:22.769",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "4 - Use take to return the first five lines of the data in jpglogsRDD",
      "text": "%pyspark\n\nsc.setJobGroup(\"Transforming data with RDDs\",\"Use take to return the first five lines of the data in jpglogsRDD\")\njpgLines \u003d jpglogsRDD.take(5)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_-838364330",
      "id": "20200120-003721_957960497",
      "dateCreated": "2021-01-31 22:14:22.769",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nUse the `take` function to return the first five lines of the data in jpglogsRDD.\nThe return value is a list of strings (in Python) or array of strings (in Scala).\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eUse the \u003ccode\u003etake\u003c/code\u003e function to return the first five lines of the data in jpglogsRDD.\n\u003cbr  /\u003eThe return value is a list of strings (in Python) or array of strings (in Scala).\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_-1034765358",
      "id": "20210121-194214_1623249747",
      "dateCreated": "2021-01-31 22:14:22.769",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "5 - Loop through and display the strings returned by take",
      "text": "%pyspark\n\nfor line in jpgLines: print(line)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.769",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "217.150.149.167 - 4712 [15/Sep/2013:23:56:06 +0100] \"GET /ronin_s4.jpg HTTP/1.0\" 200 5552 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser MeeToo 1.0\"\n104.184.210.93 - 28402 [15/Sep/2013:23:42:53 +0100] \"GET /titanic_2200.jpg HTTP/1.0\" 200 19466 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser MeeToo 2.0\"\n37.91.137.134 - 36171 [15/Sep/2013:23:39:33 +0100] \"GET /ronin_novelty_note_3.jpg HTTP/1.0\" 200 7432 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser iFruit 3\"\n177.43.223.203 - 90653 [15/Sep/2013:23:31:17 +0100] \"GET /ifruit_3.jpg HTTP/1.0\" 200 19578 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Sorrento F31L\"\n19.250.65.76 - 44388 [15/Sep/2013:23:31:10 +0100] \"GET /sorrento_f24l.jpg HTTP/1.0\" 200 5730 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser iFruit 3A\""
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262769_-1685719753",
      "id": "20200120-003836_1034138881",
      "dateCreated": "2021-01-31 22:14:22.769",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nUse the Python foreach loop to loop through the records.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eUse the Python foreach loop to loop through the records.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_-15404471",
      "id": "20210121-201933_823043164",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "6 - Use the map transformation to define a new RDD",
      "text": "%pyspark\n\nlineLengthsRDD \u003d logsRDD.map(lambda line: len(line))",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_463659850",
      "id": "20200120-004722_1690655549",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nPython Spark `map` function allows developers to reach each element of the RDD and perform some processing\non each record. Using the `map` function transformation defines a new RDD. \nStart with a simple map function that returns the length of each line in the log file. \nThis results in an RDD of integers.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003ePython Spark \u003ccode\u003emap\u003c/code\u003e function allows developers to reach each element of the RDD and perform some processing\n\u003cbr  /\u003eon each record. Using the \u003ccode\u003emap\u003c/code\u003e function transformation defines a new RDD.\n\u003cbr  /\u003eStart with a simple map function that returns the length of each line in the log file.\n\u003cbr  /\u003eThis results in an RDD of integers.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_1842195808",
      "id": "20210121-194339_1817126930",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "7 - Loop through and display the first five elements (integers) in the RDD",
      "text": "%pyspark\n\nsc.setJobGroup(\"Transforming data with RDDs\",\"Loop through and display the first five elements (integers) in the RDD\")\nfor line in lineLengthsRDD.take(5): print(line)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "151\n143\n154\n147\n160"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_30163116",
      "id": "20200120-005150_2113187186",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "8 - Create an RDD with all the fields in the weblogs",
      "text": "%pyspark\n\nlineFieldsRDD \u003d logsRDD.map(lambda line: line.split(\u0027 \u0027))",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_1366585699",
      "id": "20200120-005912_750669124",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nCalculating line lengths is not very useful. Instead, try mapping each string in logsRDD by splitting the \nstrings based on spaces.\n\nUse the `map` function and a Lambda to pass each line to the `split` function. Split on a space \u0027 \u0027.\n\nThe result will be an RDD in which each element is a list of strings (in Python) or an array of strings (in Scala).\nEach string represents a “field” in the weblog line. This is an important step in transforming unstructured\ndata into structured data.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eCalculating line lengths is not very useful. Instead, try mapping each string in logsRDD by splitting the\n\u003cbr  /\u003estrings based on spaces.\u003c/p\u003e\n\u003cp\u003eUse the \u003ccode\u003emap\u003c/code\u003e function and a Lambda to pass each line to the \u003ccode\u003esplit\u003c/code\u003e function. Split on a space \u0027 \u0027.\u003c/p\u003e\n\u003cp\u003eThe result will be an RDD in which each element is a list of strings (in Python) or an array of strings (in Scala).\n\u003cbr  /\u003eEach string represents a “field” in the weblog line. This is an important step in transforming unstructured\n\u003cbr  /\u003edata into structured data.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_533381772",
      "id": "20210121-194610_1138495347",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "9 - Return the first five elements of lineFieldsRDD",
      "text": "%pyspark\n\nsc.setJobGroup(\"Transforming data with RDDs\",\"Return the first five elements of lineFieldsRDD\")\nlineFields \u003d lineFieldsRDD.take(5)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_-1688111472",
      "id": "20200120-011220_1085103604",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nUse the `take` function to return the first five elements of lineFieldsRDD.\nThe result will be a list of lists of strings (in Python) or an array of arrays of strings (in Scala).\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eUse the \u003ccode\u003etake\u003c/code\u003e function to return the first five elements of lineFieldsRDD.\n\u003cbr  /\u003eThe result will be a list of lists of strings (in Python) or an array of arrays of strings (in Scala).\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_-1764324354",
      "id": "20210121-194829_889794186",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "10  - Display the contents of the return from take",
      "text": "%pyspark\n\nfor fields in lineFields: \n    print(\"-------\")\n    for field in fields: print(field)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.770",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "-------\n3.94.78.5\n-\n69827\n[15/Sep/2013:23:58:36\n+0100]\n\"GET\n/KBDOC-00033.html\nHTTP/1.0\"\n200\n14417\n\"http://www.loudacre.com\"\n\n\"Loudacre\nMobile\nBrowser\niFruit\n1\"\n-------\n3.94.78.5\n-\n69827\n[15/Sep/2013:23:58:36\n+0100]\n\"GET\n/theme.css\nHTTP/1.0\"\n200\n3576\n\"http://www.loudacre.com\"\n\n\"Loudacre\nMobile\nBrowser\niFruit\n1\"\n-------\n19.38.140.62\n-\n21475\n[15/Sep/2013:23:58:34\n+0100]\n\"GET\n/KBDOC-00277.html\nHTTP/1.0\"\n200\n15517\n\"http://www.loudacre.com\"\n\n\"Loudacre\nMobile\nBrowser\nRonin\nS1\"\n-------\n19.38.140.62\n-\n21475\n[15/Sep/2013:23:58:34\n+0100]\n\"GET\n/theme.css\nHTTP/1.0\"\n200\n13353\n\"http://www.loudacre.com\"\n\n\"Loudacre\nMobile\nBrowser\nRonin\nS1\"\n-------\n129.133.56.105\n-\n2489\n[15/Sep/2013:23:58:34\n+0100]\n\"GET\n/KBDOC-00033.html\nHTTP/1.0\"\n200\n10590\n\"http://www.loudacre.com\"\n\n\"Loudacre\nMobile\nBrowser\nSorrento\nF00L\""
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262770_1381918900",
      "id": "20200120-011438_1958987337",
      "dateCreated": "2021-01-31 22:14:22.770",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nDisplay the contents of the return from `take`. \nUnlike earlier examples, which returned collections of simple values (strings and ints), this time you have a set of compound values (arrays or lists containing strings).\nTherefore, to display them properly, you will need to loop through the arrays/lists in `lineFields`, and then loop through each string in the array/list.\nTo make it easier to read the output, use ------- to separate each set of field values.\nIf you choose to copy and paste the Pyspark code below, it may not automatically indent properly; be sure the indentation is correct before executing the command.\n\n```pyspark\nfor fields in lineFields: \n    print \"-------\"\n    for field in fields: print field\n```\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.780",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eDisplay the contents of the return from \u003ccode\u003etake\u003c/code\u003e.\n\u003cbr  /\u003eUnlike earlier examples, which returned collections of simple values (strings and ints), this time you have a set of compound values (arrays or lists containing strings).\n\u003cbr  /\u003eTherefore, to display them properly, you will need to loop through the arrays/lists in \u003ccode\u003elineFields\u003c/code\u003e, and then loop through each string in the array/list.\n\u003cbr  /\u003eTo make it easier to read the output, use \u0026mdash;\u0026mdash;- to separate each set of field values.\n\u003cbr  /\u003eIf you choose to copy and paste the Pyspark code below, it may not automatically indent properly; be sure the indentation is correct before executing the command.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003efor fields in lineFields: \n    print \"-------\"\n    for field in fields: print field\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262780_524881300",
      "id": "20210121-194936_1714975894",
      "dateCreated": "2021-01-31 22:14:22.780",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "11 - Create a new RDD containing just the IP addresses from each line in the log file",
      "text": "%pyspark\n\nipsRDD \u003d logsRDD.map(lambda line: line.split(\u0027 \u0027)[0])\nsc.setJobGroup(\"Transforming data with RDDs\",\"Create a new RDD containing just the IP addresses from each line in the log file\")\nfor ip in ipsRDD.take(5): print(ip)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.780",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "3.94.78.5\n3.94.78.5\n19.38.140.62\n19.38.140.62\n129.133.56.105"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262780_-397905661",
      "id": "20200120-013923_1000697022",
      "dateCreated": "2021-01-31 22:14:22.780",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nNow that you know how map works, create a new RDD containing just the IP addresses from each line in the log file.\nThe IP address is the first space-delimited field in each line. This will require `split` and an index position of 0 [0].\n`line.split(\u0027 \u0027)[0]`\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.780",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eNow that you know how map works, create a new RDD containing just the IP addresses from each line in the log file.\n\u003cbr  /\u003eThe IP address is the first space-delimited field in each line. This will require \u003ccode\u003esplit\u003c/code\u003e and an index position of 0 [0].\n\u003cbr  /\u003e\u003ccode\u003eline.split(\u0027 \u0027)[0]\u003c/code\u003e\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262780_-917386981",
      "id": "20210121-195122_1281428554",
      "dateCreated": "2021-01-31 22:14:22.780",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "12 - Finally, save the list of IP addresses as a text file",
      "text": "%pyspark\n\nsc.setJobGroup(\"Transforming data with RDDs\",\"Save the list of IP addresses as a text file\")\nipsRDD.saveAsTextFile(\"/devsh_loudacre/iplist\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.780",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262780_-405883337",
      "id": "20200120-014137_1413343527",
      "dateCreated": "2021-01-31 22:14:22.780",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n***Note***\n* If you re-run this command, you will not be able to save to the same directory because it already exists. \n* Remember you can not overwrite HDFS data.\n* Be sure to delete the directory in HDFS before saving again.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNote\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you re-run this command, you will not be able to save to the same directory because it already exists.\u003c/li\u003e\n\u003cli\u003eRemember you can not overwrite HDFS data.\u003c/li\u003e\n\u003cli\u003eBe sure to delete the directory in HDFS before saving again.\u003c/li\u003e\n\u003c/ul\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262780_1008062006",
      "id": "20210121-195346_120574668",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "13 - Confirm the files were created correctly",
      "text": "%sh\n\nhdfs dfs -ls /devsh_loudacre/iplist",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Found 183 items\n-rw-r--r--   3 livy supergroup          0 2021-01-23 13:43 /devsh_loudacre/iplist/_SUCCESS\n-rw-r--r--   3 livy supergroup      49265 2021-01-23 13:43 /devsh_loudacre/iplist/part-00000\n-rw-r--r--   3 livy supergroup      45854 2021-01-23 13:43 /devsh_loudacre/iplist/part-00001\n-rw-r--r--   3 livy supergroup      50031 2021-01-23 13:43 /devsh_loudacre/iplist/part-00002\n-rw-r--r--   3 livy supergroup      45898 2021-01-23 13:43 /devsh_loudacre/iplist/part-00003\n-rw-r--r--   3 livy supergroup      48070 2021-01-23 13:43 /devsh_loudacre/iplist/part-00004\n-rw-r--r--   3 livy supergroup      46430 2021-01-23 13:43 /devsh_loudacre/iplist/part-00005\n-rw-r--r--   3 livy supergroup      46177 2021-01-23 13:43 /devsh_loudacre/iplist/part-00006\n-rw-r--r--   3 livy supergroup      50720 2021-01-23 13:43 /devsh_loudacre/iplist/part-00007\n-rw-r--r--   3 livy supergroup      47314 2021-01-23 13:43 /devsh_loudacre/iplist/part-00008\n-rw-r--r--   3 livy supergroup      46282 2021-01-23 13:43 /devsh_loudacre/iplist/part-00009\n-rw-r--r--   3 livy supergroup      45998 2021-01-23 13:43 /devsh_loudacre/iplist/part-00010\n-rw-r--r--   3 livy supergroup      49261 2021-01-23 13:43 /devsh_loudacre/iplist/part-00011\n-rw-r--r--   3 livy supergroup      47918 2021-01-23 13:43 /devsh_loudacre/iplist/part-00012\n-rw-r--r--   3 livy supergroup      46580 2021-01-23 13:43 /devsh_loudacre/iplist/part-00013\n-rw-r--r--   3 livy supergroup      45576 2021-01-23 13:43 /devsh_loudacre/iplist/part-00014\n-rw-r--r--   3 livy supergroup      49698 2021-01-23 13:43 /devsh_loudacre/iplist/part-00015\n-rw-r--r--   3 livy supergroup      45627 2021-01-23 13:43 /devsh_loudacre/iplist/part-00016\n-rw-r--r--   3 livy supergroup      49712 2021-01-23 13:43 /devsh_loudacre/iplist/part-00017\n-rw-r--r--   3 livy supergroup      49193 2021-01-23 13:43 /devsh_loudacre/iplist/part-00018\n-rw-r--r--   3 livy supergroup      47206 2021-01-23 13:43 /devsh_loudacre/iplist/part-00019\n-rw-r--r--   3 livy supergroup      48088 2021-01-23 13:43 /devsh_loudacre/iplist/part-00020\n-rw-r--r--   3 livy supergroup      46346 2021-01-23 13:43 /devsh_loudacre/iplist/part-00021\n-rw-r--r--   3 livy supergroup      46079 2021-01-23 13:43 /devsh_loudacre/iplist/part-00022\n-rw-r--r--   3 livy supergroup      49463 2021-01-23 13:43 /devsh_loudacre/iplist/part-00023\n-rw-r--r--   3 livy supergroup      50071 2021-01-23 13:43 /devsh_loudacre/iplist/part-00024\n-rw-r--r--   3 livy supergroup      49298 2021-01-23 13:43 /devsh_loudacre/iplist/part-00025\n-rw-r--r--   3 livy supergroup      49523 2021-01-23 13:43 /devsh_loudacre/iplist/part-00026\n-rw-r--r--   3 livy supergroup      48979 2021-01-23 13:43 /devsh_loudacre/iplist/part-00027\n-rw-r--r--   3 livy supergroup      49241 2021-01-23 13:43 /devsh_loudacre/iplist/part-00028\n-rw-r--r--   3 livy supergroup      46977 2021-01-23 13:43 /devsh_loudacre/iplist/part-00029\n-rw-r--r--   3 livy supergroup      47085 2021-01-23 13:43 /devsh_loudacre/iplist/part-00030\n-rw-r--r--   3 livy supergroup      49301 2021-01-23 13:43 /devsh_loudacre/iplist/part-00031\n-rw-r--r--   3 livy supergroup      47146 2021-01-23 13:43 /devsh_loudacre/iplist/part-00032\n-rw-r--r--   3 livy supergroup      47439 2021-01-23 13:43 /devsh_loudacre/iplist/part-00033\n-rw-r--r--   3 livy supergroup      49843 2021-01-23 13:43 /devsh_loudacre/iplist/part-00034\n-rw-r--r--   3 livy supergroup      48852 2021-01-23 13:43 /devsh_loudacre/iplist/part-00035\n-rw-r--r--   3 livy supergroup      48425 2021-01-23 13:43 /devsh_loudacre/iplist/part-00036\n-rw-r--r--   3 livy supergroup      48696 2021-01-23 13:43 /devsh_loudacre/iplist/part-00037\n-rw-r--r--   3 livy supergroup      46612 2021-01-23 13:43 /devsh_loudacre/iplist/part-00038\n-rw-r--r--   3 livy supergroup      46337 2021-01-23 13:43 /devsh_loudacre/iplist/part-00039\n-rw-r--r--   3 livy supergroup      50269 2021-01-23 13:43 /devsh_loudacre/iplist/part-00040\n-rw-r--r--   3 livy supergroup      47601 2021-01-23 13:43 /devsh_loudacre/iplist/part-00041\n-rw-r--r--   3 livy supergroup      47440 2021-01-23 13:43 /devsh_loudacre/iplist/part-00042\n-rw-r--r--   3 livy supergroup      49665 2021-01-23 13:43 /devsh_loudacre/iplist/part-00043\n-rw-r--r--   3 livy supergroup      48386 2021-01-23 13:43 /devsh_loudacre/iplist/part-00044\n-rw-r--r--   3 livy supergroup      49493 2021-01-23 13:43 /devsh_loudacre/iplist/part-00045\n-rw-r--r--   3 livy supergroup      49556 2021-01-23 13:43 /devsh_loudacre/iplist/part-00046\n-rw-r--r--   3 livy supergroup      91745 2021-01-23 13:43 /devsh_loudacre/iplist/part-00047\n-rw-r--r--   3 livy supergroup     100562 2021-01-23 13:43 /devsh_loudacre/iplist/part-00048\n-rw-r--r--   3 livy supergroup     103214 2021-01-23 13:43 /devsh_loudacre/iplist/part-00049\n-rw-r--r--   3 livy supergroup      90439 2021-01-23 13:43 /devsh_loudacre/iplist/part-00050\n-rw-r--r--   3 livy supergroup     102547 2021-01-23 13:43 /devsh_loudacre/iplist/part-00051\n-rw-r--r--   3 livy supergroup     101134 2021-01-23 13:43 /devsh_loudacre/iplist/part-00052\n-rw-r--r--   3 livy supergroup      98024 2021-01-23 13:43 /devsh_loudacre/iplist/part-00053\n-rw-r--r--   3 livy supergroup     101902 2021-01-23 13:43 /devsh_loudacre/iplist/part-00054\n-rw-r--r--   3 livy supergroup      91723 2021-01-23 13:43 /devsh_loudacre/iplist/part-00055\n-rw-r--r--   3 livy supergroup     103461 2021-01-23 13:43 /devsh_loudacre/iplist/part-00056\n-rw-r--r--   3 livy supergroup      92419 2021-01-23 13:43 /devsh_loudacre/iplist/part-00057\n-rw-r--r--   3 livy supergroup      91577 2021-01-23 13:43 /devsh_loudacre/iplist/part-00058\n-rw-r--r--   3 livy supergroup      98231 2021-01-23 13:43 /devsh_loudacre/iplist/part-00059\n-rw-r--r--   3 livy supergroup     102310 2021-01-23 13:43 /devsh_loudacre/iplist/part-00060\n-rw-r--r--   3 livy supergroup      92409 2021-01-23 13:43 /devsh_loudacre/iplist/part-00061\n-rw-r--r--   3 livy supergroup      95437 2021-01-23 13:43 /devsh_loudacre/iplist/part-00062\n-rw-r--r--   3 livy supergroup     102634 2021-01-23 13:43 /devsh_loudacre/iplist/part-00063\n-rw-r--r--   3 livy supergroup      92643 2021-01-23 13:43 /devsh_loudacre/iplist/part-00064\n-rw-r--r--   3 livy supergroup     102446 2021-01-23 13:43 /devsh_loudacre/iplist/part-00065\n-rw-r--r--   3 livy supergroup      95294 2021-01-23 13:43 /devsh_loudacre/iplist/part-00066\n-rw-r--r--   3 livy supergroup     100129 2021-01-23 13:43 /devsh_loudacre/iplist/part-00067\n-rw-r--r--   3 livy supergroup      92308 2021-01-23 13:43 /devsh_loudacre/iplist/part-00068\n-rw-r--r--   3 livy supergroup     100248 2021-01-23 13:43 /devsh_loudacre/iplist/part-00069\n-rw-r--r--   3 livy supergroup      99069 2021-01-23 13:43 /devsh_loudacre/iplist/part-00070\n-rw-r--r--   3 livy supergroup      92053 2021-01-23 13:43 /devsh_loudacre/iplist/part-00071\n-rw-r--r--   3 livy supergroup      91013 2021-01-23 13:43 /devsh_loudacre/iplist/part-00072\n-rw-r--r--   3 livy supergroup      92198 2021-01-23 13:43 /devsh_loudacre/iplist/part-00073\n-rw-r--r--   3 livy supergroup      92462 2021-01-23 13:43 /devsh_loudacre/iplist/part-00074\n-rw-r--r--   3 livy supergroup     102237 2021-01-23 13:43 /devsh_loudacre/iplist/part-00075\n-rw-r--r--   3 livy supergroup      95082 2021-01-23 13:43 /devsh_loudacre/iplist/part-00076\n-rw-r--r--   3 livy supergroup      95717 2021-01-23 13:43 /devsh_loudacre/iplist/part-00077\n-rw-r--r--   3 livy supergroup     103245 2021-01-23 13:43 /devsh_loudacre/iplist/part-00078\n-rw-r--r--   3 livy supergroup     100830 2021-01-23 13:43 /devsh_loudacre/iplist/part-00079\n-rw-r--r--   3 livy supergroup     101057 2021-01-23 13:43 /devsh_loudacre/iplist/part-00080\n-rw-r--r--   3 livy supergroup      97285 2021-01-23 13:43 /devsh_loudacre/iplist/part-00081\n-rw-r--r--   3 livy supergroup      97191 2021-01-23 13:43 /devsh_loudacre/iplist/part-00082\n-rw-r--r--   3 livy supergroup      96072 2021-01-23 13:43 /devsh_loudacre/iplist/part-00083\n-rw-r--r--   3 livy supergroup      97886 2021-01-23 13:43 /devsh_loudacre/iplist/part-00084\n-rw-r--r--   3 livy supergroup     103754 2021-01-23 13:43 /devsh_loudacre/iplist/part-00085\n-rw-r--r--   3 livy supergroup      95227 2021-01-23 13:43 /devsh_loudacre/iplist/part-00086\n-rw-r--r--   3 livy supergroup     100376 2021-01-23 13:43 /devsh_loudacre/iplist/part-00087\n-rw-r--r--   3 livy supergroup      97188 2021-01-23 13:43 /devsh_loudacre/iplist/part-00088\n-rw-r--r--   3 livy supergroup      96733 2021-01-23 13:43 /devsh_loudacre/iplist/part-00089\n-rw-r--r--   3 livy supergroup      92797 2021-01-23 13:43 /devsh_loudacre/iplist/part-00090\n-rw-r--r--   3 livy supergroup     101908 2021-01-23 13:43 /devsh_loudacre/iplist/part-00091\n-rw-r--r--   3 livy supergroup      94873 2021-01-23 13:43 /devsh_loudacre/iplist/part-00092\n-rw-r--r--   3 livy supergroup     101805 2021-01-23 13:43 /devsh_loudacre/iplist/part-00093\n-rw-r--r--   3 livy supergroup     100864 2021-01-23 13:43 /devsh_loudacre/iplist/part-00094\n-rw-r--r--   3 livy supergroup      98878 2021-01-23 13:43 /devsh_loudacre/iplist/part-00095\n-rw-r--r--   3 livy supergroup     104473 2021-01-23 13:43 /devsh_loudacre/iplist/part-00096\n-rw-r--r--   3 livy supergroup      92999 2021-01-23 13:43 /devsh_loudacre/iplist/part-00097\n-rw-r--r--   3 livy supergroup      98649 2021-01-23 13:43 /devsh_loudacre/iplist/part-00098\n-rw-r--r--   3 livy supergroup      93301 2021-01-23 13:43 /devsh_loudacre/iplist/part-00099\n-rw-r--r--   3 livy supergroup      99921 2021-01-23 13:43 /devsh_loudacre/iplist/part-00100\n-rw-r--r--   3 livy supergroup      92481 2021-01-23 13:43 /devsh_loudacre/iplist/part-00101\n-rw-r--r--   3 livy supergroup      99558 2021-01-23 13:43 /devsh_loudacre/iplist/part-00102\n-rw-r--r--   3 livy supergroup      95850 2021-01-23 13:43 /devsh_loudacre/iplist/part-00103\n-rw-r--r--   3 livy supergroup     100134 2021-01-23 13:43 /devsh_loudacre/iplist/part-00104\n-rw-r--r--   3 livy supergroup      96173 2021-01-23 13:43 /devsh_loudacre/iplist/part-00105\n-rw-r--r--   3 livy supergroup     101061 2021-01-23 13:43 /devsh_loudacre/iplist/part-00106\n-rw-r--r--   3 livy supergroup      93851 2021-01-23 13:43 /devsh_loudacre/iplist/part-00107\n-rw-r--r--   3 livy supergroup      99674 2021-01-23 13:43 /devsh_loudacre/iplist/part-00108\n-rw-r--r--   3 livy supergroup      99583 2021-01-23 13:43 /devsh_loudacre/iplist/part-00109\n-rw-r--r--   3 livy supergroup      92949 2021-01-23 13:43 /devsh_loudacre/iplist/part-00110\n-rw-r--r--   3 livy supergroup     104021 2021-01-23 13:43 /devsh_loudacre/iplist/part-00111\n-rw-r--r--   3 livy supergroup      95607 2021-01-23 13:43 /devsh_loudacre/iplist/part-00112\n-rw-r--r--   3 livy supergroup     103379 2021-01-23 13:43 /devsh_loudacre/iplist/part-00113\n-rw-r--r--   3 livy supergroup     103024 2021-01-23 13:43 /devsh_loudacre/iplist/part-00114\n-rw-r--r--   3 livy supergroup      97907 2021-01-23 13:43 /devsh_loudacre/iplist/part-00115\n-rw-r--r--   3 livy supergroup      97361 2021-01-23 13:43 /devsh_loudacre/iplist/part-00116\n-rw-r--r--   3 livy supergroup      92279 2021-01-23 13:43 /devsh_loudacre/iplist/part-00117\n-rw-r--r--   3 livy supergroup      93950 2021-01-23 13:43 /devsh_loudacre/iplist/part-00118\n-rw-r--r--   3 livy supergroup     101163 2021-01-23 13:43 /devsh_loudacre/iplist/part-00119\n-rw-r--r--   3 livy supergroup      99148 2021-01-23 13:43 /devsh_loudacre/iplist/part-00120\n-rw-r--r--   3 livy supergroup      94291 2021-01-23 13:43 /devsh_loudacre/iplist/part-00121\n-rw-r--r--   3 livy supergroup      98946 2021-01-23 13:43 /devsh_loudacre/iplist/part-00122\n-rw-r--r--   3 livy supergroup      94118 2021-01-23 13:43 /devsh_loudacre/iplist/part-00123\n-rw-r--r--   3 livy supergroup      98767 2021-01-23 13:43 /devsh_loudacre/iplist/part-00124\n-rw-r--r--   3 livy supergroup      91600 2021-01-23 13:43 /devsh_loudacre/iplist/part-00125\n-rw-r--r--   3 livy supergroup      91759 2021-01-23 13:43 /devsh_loudacre/iplist/part-00126\n-rw-r--r--   3 livy supergroup      96115 2021-01-23 13:43 /devsh_loudacre/iplist/part-00127\n-rw-r--r--   3 livy supergroup      95529 2021-01-23 13:43 /devsh_loudacre/iplist/part-00128\n-rw-r--r--   3 livy supergroup     104761 2021-01-23 13:43 /devsh_loudacre/iplist/part-00129\n-rw-r--r--   3 livy supergroup      92029 2021-01-23 13:43 /devsh_loudacre/iplist/part-00130\n-rw-r--r--   3 livy supergroup     100009 2021-01-23 13:43 /devsh_loudacre/iplist/part-00131\n-rw-r--r--   3 livy supergroup     101173 2021-01-23 13:43 /devsh_loudacre/iplist/part-00132\n-rw-r--r--   3 livy supergroup     100757 2021-01-23 13:43 /devsh_loudacre/iplist/part-00133\n-rw-r--r--   3 livy supergroup     103584 2021-01-23 13:43 /devsh_loudacre/iplist/part-00134\n-rw-r--r--   3 livy supergroup     102016 2021-01-23 13:43 /devsh_loudacre/iplist/part-00135\n-rw-r--r--   3 livy supergroup      95823 2021-01-23 13:43 /devsh_loudacre/iplist/part-00136\n-rw-r--r--   3 livy supergroup     101843 2021-01-23 13:43 /devsh_loudacre/iplist/part-00137\n-rw-r--r--   3 livy supergroup     103870 2021-01-23 13:43 /devsh_loudacre/iplist/part-00138\n-rw-r--r--   3 livy supergroup      99117 2021-01-23 13:43 /devsh_loudacre/iplist/part-00139\n-rw-r--r--   3 livy supergroup     100483 2021-01-23 13:43 /devsh_loudacre/iplist/part-00140\n-rw-r--r--   3 livy supergroup      94534 2021-01-23 13:43 /devsh_loudacre/iplist/part-00141\n-rw-r--r--   3 livy supergroup      95677 2021-01-23 13:43 /devsh_loudacre/iplist/part-00142\n-rw-r--r--   3 livy supergroup      94979 2021-01-23 13:43 /devsh_loudacre/iplist/part-00143\n-rw-r--r--   3 livy supergroup     100460 2021-01-23 13:43 /devsh_loudacre/iplist/part-00144\n-rw-r--r--   3 livy supergroup      93876 2021-01-23 13:43 /devsh_loudacre/iplist/part-00145\n-rw-r--r--   3 livy supergroup      97586 2021-01-23 13:43 /devsh_loudacre/iplist/part-00146\n-rw-r--r--   3 livy supergroup     100628 2021-01-23 13:43 /devsh_loudacre/iplist/part-00147\n-rw-r--r--   3 livy supergroup      98568 2021-01-23 13:43 /devsh_loudacre/iplist/part-00148\n-rw-r--r--   3 livy supergroup      99519 2021-01-23 13:43 /devsh_loudacre/iplist/part-00149\n-rw-r--r--   3 livy supergroup     103016 2021-01-23 13:43 /devsh_loudacre/iplist/part-00150\n-rw-r--r--   3 livy supergroup     103437 2021-01-23 13:43 /devsh_loudacre/iplist/part-00151\n-rw-r--r--   3 livy supergroup     101090 2021-01-23 13:43 /devsh_loudacre/iplist/part-00152\n-rw-r--r--   3 livy supergroup      95280 2021-01-23 13:43 /devsh_loudacre/iplist/part-00153\n-rw-r--r--   3 livy supergroup      99609 2021-01-23 13:43 /devsh_loudacre/iplist/part-00154\n-rw-r--r--   3 livy supergroup      93732 2021-01-23 13:43 /devsh_loudacre/iplist/part-00155\n-rw-r--r--   3 livy supergroup      96405 2021-01-23 13:43 /devsh_loudacre/iplist/part-00156\n-rw-r--r--   3 livy supergroup      93427 2021-01-23 13:43 /devsh_loudacre/iplist/part-00157\n-rw-r--r--   3 livy supergroup      93610 2021-01-23 13:43 /devsh_loudacre/iplist/part-00158\n-rw-r--r--   3 livy supergroup      96596 2021-01-23 13:43 /devsh_loudacre/iplist/part-00159\n-rw-r--r--   3 livy supergroup      99904 2021-01-23 13:43 /devsh_loudacre/iplist/part-00160\n-rw-r--r--   3 livy supergroup      95665 2021-01-23 13:43 /devsh_loudacre/iplist/part-00161\n-rw-r--r--   3 livy supergroup     103957 2021-01-23 13:43 /devsh_loudacre/iplist/part-00162\n-rw-r--r--   3 livy supergroup      96046 2021-01-23 13:43 /devsh_loudacre/iplist/part-00163\n-rw-r--r--   3 livy supergroup     101422 2021-01-23 13:43 /devsh_loudacre/iplist/part-00164\n-rw-r--r--   3 livy supergroup     102844 2021-01-23 13:43 /devsh_loudacre/iplist/part-00165\n-rw-r--r--   3 livy supergroup      92003 2021-01-23 13:43 /devsh_loudacre/iplist/part-00166\n-rw-r--r--   3 livy supergroup      94551 2021-01-23 13:43 /devsh_loudacre/iplist/part-00167\n-rw-r--r--   3 livy supergroup      94874 2021-01-23 13:43 /devsh_loudacre/iplist/part-00168\n-rw-r--r--   3 livy supergroup      92896 2021-01-23 13:43 /devsh_loudacre/iplist/part-00169\n-rw-r--r--   3 livy supergroup      91539 2021-01-23 13:43 /devsh_loudacre/iplist/part-00170\n-rw-r--r--   3 livy supergroup      94904 2021-01-23 13:43 /devsh_loudacre/iplist/part-00171\n-rw-r--r--   3 livy supergroup      95772 2021-01-23 13:43 /devsh_loudacre/iplist/part-00172\n-rw-r--r--   3 livy supergroup     103791 2021-01-23 13:43 /devsh_loudacre/iplist/part-00173\n-rw-r--r--   3 livy supergroup      94535 2021-01-23 13:43 /devsh_loudacre/iplist/part-00174\n-rw-r--r--   3 livy supergroup      93885 2021-01-23 13:43 /devsh_loudacre/iplist/part-00175\n-rw-r--r--   3 livy supergroup     103140 2021-01-23 13:43 /devsh_loudacre/iplist/part-00176\n-rw-r--r--   3 livy supergroup      98011 2021-01-23 13:43 /devsh_loudacre/iplist/part-00177\n-rw-r--r--   3 livy supergroup      98670 2021-01-23 13:43 /devsh_loudacre/iplist/part-00178\n-rw-r--r--   3 livy supergroup      93761 2021-01-23 13:43 /devsh_loudacre/iplist/part-00179\n-rw-r--r--   3 livy supergroup      93654 2021-01-23 13:43 /devsh_loudacre/iplist/part-00180\n-rw-r--r--   3 livy supergroup     101291 2021-01-23 13:43 /devsh_loudacre/iplist/part-00181\n219.139\n143.118.219.139\n69.221.65.103\n69.221.65.103\n246.74.107.137\n246.74.107.137\n190.13.6.124\n190.13.6.124\n54.224.32.102\n54.224.32.102\n30.52.185.15\n30.52.185.15\n30.52.185.15\n30.52.185.15\n201.254.194.57\n201.254.194.57\n140.113.29.181\n140.113.29.181\n186.168.79.122\n186.168.79.122\n208.253.247.9\n208.253.247.9\n124.237.192.188\n124.237.192.188\n124.237.192.188\n124.237.192.188\n189.75.204.120\n189.75.204.120\n189.75.204.120\n189.75.204.120\n175.227.57.139\n175.227.57.139\n214.113.216.107\n214.113.216.107\n8.231.255.13\n8.231.255.13\n129.59.253.188\n129.59.253.188\n95.114.17.199\n95.114.17.199\n242.138.65.128\n242.138.65.128\n72.12.5.196\n72.12.5.196\n234.12.134.3\n234.12.134.3\n216.3.14.246\n216.3.14.246\n236.44.140.93\n236.44.140.93\n184.110.123.14\n184.110.123.14\n184.110.123.14\n184.110.123.14\n240.229.26.49\n240.229.26.49\n34.27.217.195\n34.27.217.195\n225.2.181.95\n225.2.181.95\n231.255.18.204\n231.255.18.204\n185.55.145.228\n185.55.145.228\n222.243.148.37\n222.243.148.37\n218.20.129.2\n218.20.129.2\n218.20.129.2\n218.20.129.2\n54.149.205.210\n54.149.205.210\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262781_675233118",
      "id": "20200120-014354_284456265",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\nhdfs dfs -head /devsh_loudacre/iplist/part-00000",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "3.94.78.5\n3.94.78.5\n19.38.140.62\n19.38.140.62\n129.133.56.105\n129.133.56.105\n217.150.149.167\n217.150.149.167\n217.150.149.167\n217.150.149.167\n209.151.12.34\n209.151.12.34\n184.97.84.245\n184.97.84.245\n233.60.251.2\n233.60.251.2\n160.134.139.204\n160.134.139.204\n19.209.18.222\n19.209.18.222\n230.220.223.28\n230.220.223.28\n129.253.238.61\n129.253.238.61\n119.182.134.196\n119.182.134.196\n118.38.214.28\n118.38.214.28\n206.97.149.242\n206.97.149.242\n143.41.104.110\n143.41.104.110\n104.184.210.93\n104.184.210.93\n104.184.210.93\n104.184.210.93\n37.91.137.134\n37.91.137.134\n37.91.137.134\n37.91.137.134\n198.195.16.140\n198.195.16.140\n93.209.179.64\n93.209.179.64\n50.154.202.127\n50.154.202.127\n126.56.30.140\n126.56.30.140\n130.2.36.64\n130.2.36.64\n177.43.223.203\n177.43.223.203\n177.43.223.203\n177.43.223.203\n19.250.65.76\n19.250.65.76\n19.250.65.76\n19.250.65.76\n190.127.207.89\n190.127.207.89\n201.144.125.182\n201.144.125.182\n85.151.118.58\n85.151.118.58\n56.2.93.164\n56.2.93.164\n206.205.155.227\n206.205.155.227\n117.12.150.183\n117.12.150.183\n194.100.191.30\n194"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262781_-881736823",
      "id": "20210123-134412_1522777655",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nList the contents of the /devsh_loudacre/iplist HDFS folder. \nReview the contents of one of the files to confirm that they were created correctly.",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList the contents of the /devsh_loudacre/iplist HDFS folder.\n\u003cbr  /\u003eReview the contents of one of the files to confirm that they were created correctly.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262781_616697925",
      "id": "20210121-195643_1574921285",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "14 - Create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file",
      "text": "%pyspark\n\n# Map web logs to \"ip-address,user-id\" and save\nsc.setJobGroup(\"Transforming data with RDDs\",\"Create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file\")\nuserIPRDD\u003dlogsRDD.filter(lambda line: \".html\" in line).map(lambda line: line.split(\u0027 \u0027)[0]+\",\"+line.split(\u0027 \u0027)[2])\nuserIPRDD.saveAsTextFile(\"/devsh_loudacre/userips_csv\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262781_-581138215",
      "id": "20200120-015958_582450735",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nA common step in transforming unstructured data is to split on a field delimiter and to separate the fields\nwith a comma, creating a .csv file. \n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eA common step in transforming unstructured data is to split on a field delimiter and to separate the fields\n\u003cbr  /\u003ewith a comma, creating a .csv file.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262781_53432244",
      "id": "20210123-134954_1790971944",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n#### Caution\nWhile functional programming will allow very complex single lines of code, as in this example, \na developer should always write code first and formost for readability. \n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch4\u003eCaution\u003c/h4\u003e\n\u003cp\u003eWhile functional programming will allow very complex single lines of code, as in this example,\n\u003cbr  /\u003ea developer should always write code first and formost for readability.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262781_-434062728",
      "id": "20210123-134530_1841896348",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Map Weblog Entries to IP Address/User ID Pairs\n\nUse RDD transformations to create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file.\n(Filter for files with the .html extension; disregard requests for other file types.)\nThe user ID is the third field in each log file line. \nSave the data into a comma-separated text file in the directory `/devsh_loudacre/userips_csv`. \nMake sure the data is saved in the form of comma-separated strings:\n```pyspark\n165.32.101.206,8\n100.219.90.44,102\n182.4.148.56,173 \n246.241.6.175,45395 \n175.223.172.207,4115\n...\n```\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.781",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eMap Weblog Entries to IP Address/User ID Pairs\u003c/h3\u003e\n\u003cp\u003eUse RDD transformations to create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file.\n\u003cbr  /\u003e(Filter for files with the .html extension; disregard requests for other file types.)\n\u003cbr  /\u003eThe user ID is the third field in each log file line.\n\u003cbr  /\u003eSave the data into a comma-separated text file in the directory \u003ccode\u003e/devsh_loudacre/userips_csv\u003c/code\u003e.\n\u003cbr  /\u003eMake sure the data is saved in the form of comma-separated strings:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e165.32.101.206,8\n100.219.90.44,102\n182.4.148.56,173 \n246.241.6.175,45395 \n175.223.172.207,4115\n...\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262781_583226654",
      "id": "20210121-195844_517528545",
      "dateCreated": "2021-01-31 22:14:22.781",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "15 - Load the new CSV files in /devsh_loudacre/userips_csv created above into a DataFrame, then view the data and schema",
      "text": "%pyspark\n\nsc.setJobGroup(\"Transforming data with RDDs\",\"Read the userips_csv files\")\nuseripsDF \u003d spark.read.option(\"inferSchema\",\"true\").csv(\"/devsh_loudacre/userips_csv\")\nuseripsDF.printSchema()\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "_c0": "string",
                      "_c1": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- _c0: string (nullable \u003d true)\n |-- _c1: integer (nullable \u003d true)"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_1099280475",
      "id": "20200120-020455_1308475709",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nsc.setJobGroup(\"Transforming data with RDDs\",\"Show the userips_csv DataFrame\")\nuseripsDF.show(10)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------------+------+\n|            _c0|   _c1|\n+---------------+------+\n|  15.254.228.58|100277|\n|  86.18.208.153| 32439|\n|  208.145.20.46|     6|\n|   211.37.67.40|    67|\n|    46.55.5.181|    72|\n| 17.131.173.177| 32838|\n| 214.97.110.146|    42|\n| 179.75.101.241| 36489|\n|126.245.125.242|   162|\n|   12.16.98.222|   198|\n+---------------+------+\nonly showing top 10 rows"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_158581740",
      "id": "20210123-134745_320585590",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nNow that the data is in CSV format, it can easily be converted to a DataFrame and it can be used by Spark SQL\nRead in the .csv file into `useripsDF`. Print the Schema. Show the first 10 records.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eNow that the data is in CSV format, it can easily be converted to a DataFrame and it can be used by Spark SQL\n\u003cbr  /\u003eRead in the .csv file into \u003ccode\u003euseripsDF\u003c/code\u003e. Print the Schema. Show the first 10 records.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_-1360288458",
      "id": "20210121-200014_872512754",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Bonus Exercise 1: Clean Device Status Data\nIf you have more time, attempt this extra bonus exercise.\n\nOne common use of core Spark RDDs is data scrubbing—converting the data into a format that can be used in Spark SQL.\nIn this bonus exercise, you will process data in order to get it into a standardized format for later processing.\n\nReview the contents of the file `/home/training/training_materials/devsh/data/devicestatus.txt`. \nThis file contains data collected from mobile devices on Loudacre’s network, including device ID, current status, location, and so on. \n\nBecause Loudacre previously acquired other mobile providers’ networks, the data from different subnetworks has different formats. \nNote that the records in this file have different field delimiters: some use commas, some use pipes (|), and so on. \n```pyspark\n2014-03-15:10:10:33,Ronin S2,1a7eca8d-60c9-4d25-8609-d6cfd1ac80a1,0,24,82,72,enabled,enabled,enabled,41,62,36.49259162,-121.003629078\n2014-03-15:10:10:33/Titanic 2300/d86dbb9d-ff3c-40c6-8685-01f1fac45d9f/59/83/9/3/28/0/enabled/disabled/enabled/34.3456792864/-117.768326105\n```\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eBonus Exercise 1: Clean Device Status Data\u003c/h3\u003e\n\u003cp\u003eIf you have more time, attempt this extra bonus exercise.\u003c/p\u003e\n\u003cp\u003eOne common use of core Spark RDDs is data scrubbing—converting the data into a format that can be used in Spark SQL.\n\u003cbr  /\u003eIn this bonus exercise, you will process data in order to get it into a standardized format for later processing.\u003c/p\u003e\n\u003cp\u003eReview the contents of the file \u003ccode\u003e/home/training/training_materials/devsh/data/devicestatus.txt\u003c/code\u003e.\n\u003cbr  /\u003eThis file contains data collected from mobile devices on Loudacre’s network, including device ID, current status, location, and so on.\u003c/p\u003e\n\u003cp\u003eBecause Loudacre previously acquired other mobile providers’ networks, the data from different subnetworks has different formats.\n\u003cbr  /\u003eNote that the records in this file have different field delimiters: some use commas, some use pipes (|), and so on.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e2014-03-15:10:10:33,Ronin S2,1a7eca8d-60c9-4d25-8609-d6cfd1ac80a1,0,24,82,72,enabled,enabled,enabled,41,62,36.49259162,-121.003629078\n2014-03-15:10:10:33/Titanic 2300/d86dbb9d-ff3c-40c6-8685-01f1fac45d9f/59/83/9/3/28/0/enabled/disabled/enabled/34.3456792864/-117.768326105\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_868279959",
      "id": "20210121-200300_604174406",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "16 - Upload the devicestatus.txt file to HDFS",
      "text": "%sh\nhdfs dfs -rm -r -skipTrash /devsh_loudacre/devicestatus.txt\nhdfs dfs -put /home/training/training_materials/devsh/data/devicestatus.txt /devsh_loudacre",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Deleted /devsh_loudacre/devicestatus.txt\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_2101316472",
      "id": "20200120-021351_26802562",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "17 - Clean up the data",
      "text": "%pyspark\n\n# Load the data file\ndevstatus \u003d sc.textFile(\"/devsh_loudacre/devicestatus.txt\")\n\n# Filter out lines with \u003c 20 characters, use the 20th character as the delimiter, parse the line, and filter out bad lines\ncleanstatus \u003d devstatus.filter(lambda line: len(line) \u003e 20).map(lambda line: line.split(line[19:20])).filter(lambda values: len(values) \u003d\u003d 14)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_-1657893402",
      "id": "20200120-022239_42556740",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nIn order to clean up  the data, you will have to perform the following tasks:\n\n* Determine which delimiter to use (the 20th character—position 19—is the first use of the delimiter).\n* Filter out any records which do not parse correctly (hint: each record should have exactly 14 values).\n* Extract the date (first field), model (second field), device ID (third field), and latitude and longitude (13th and 14th fields respectively).\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eIn order to clean up  the data, you will have to perform the following tasks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDetermine which delimiter to use (the 20th character—position 19—is the first use of the delimiter).\u003c/li\u003e\n\u003cli\u003eFilter out any records which do not parse correctly (hint: each record should have exactly 14 values).\u003c/li\u003e\n\u003cli\u003eExtract the date (first field), model (second field), device ID (third field), and latitude and longitude (13th and 14th fields respectively).\u003c/li\u003e\n\u003c/ul\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_1392313098",
      "id": "20210121-200453_372024787",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "18 - Create a new RDD containing date, manufacturer, device ID, latitude and longitude",
      "text": "%pyspark\n\n# Create a new RDD containing date, manufacturer, device ID, latitude and longitude\ndevicedata \u003d cleanstatus.map(lambda values: (values[0], values[1].split(\u0027 \u0027)[0], values[2], values[12], values[13]))",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_-1019013984",
      "id": "20200120-023138_511337312",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe second field contains the device manufacturer and model name (such as Ronin S2).\nSplit this field by spaces to separate the manufacturer from the model (for example, manufacturer Ronin, model S2). \nKeep just the manufacturer name.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.782",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eThe second field contains the device manufacturer and model name (such as Ronin S2).\n\u003cbr  /\u003eSplit this field by spaces to separate the manufacturer from the model (for example, manufacturer Ronin, model S2).\n\u003cbr  /\u003eKeep just the manufacturer name.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_-542362986",
      "id": "20210121-200700_2136882845",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "19 - Save the extracted data to comma-delimited text files in the /devsh_loudacre/devicestatus_etl directory on HDFS",
      "text": "%pyspark\n\nsc.setJobGroup(\"Transforming data with RDDs\",\"Save to a CSV file as a comma-delimited string\")\ndevicedata.map(lambda values: \u0027,\u0027.join(values)).saveAsTextFile(\"/devsh_loudacre/devicestatus_etl\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.783",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262782_885802069",
      "id": "20200120-023531_1129507359",
      "dateCreated": "2021-01-31 22:14:22.782",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "20 - Confirm that the data in the file(s) was saved correctly.",
      "text": "%sh\n\nhdfs dfs -ls /devsh_loudacre/devicestatus_etl\nhdfs dfs -tail /devsh_loudacre/devicestatus_etl/part-00000",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.783",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Found 3 items\n-rw-r--r--   3 livy supergroup          0 2021-01-21 10:37 /devsh_loudacre/devicestatus_etl/_SUCCESS\n-rw-r--r--   3 livy supergroup    4616923 2021-01-21 10:37 /devsh_loudacre/devicestatus_etl/part-00000\n-rw-r--r--   3 livy supergroup    4617183 2021-01-21 10:37 /devsh_loudacre/devicestatus_etl/part-00001\n,-118.393732886\n2014-03-15:10:29:55,Sorrento,f326669c-16b2-4fa9-af2f-a4ca800bd139,35.9586664539,-119.236456696\n2014-03-15:10:29:55,iFruit,f4fe10c8-07e5-4eaa-bc37-760086ec2731,33.6780751575,-111.346660134\n2014-03-15:10:29:55,MeeToo,dafe4706-e0dd-4da5-8c8a-2486ef68761e,37.8158835208,-121.447245741\n2014-03-15:10:29:55,Titanic,91f9dd16-0ba0-4cc4-8365-5a05dfcf8821,37.8415316233,-122.122884963\n2014-03-15:10:29:55,Titanic,7a83c2c8-02e3-49c7-b87a-30d9aeef8a34,37.8512123294,-122.203328818\n2014-03-15:10:29:55,Sorrento,a6aa3822-21cd-46c9-b029-f9ce9a750140,37.3151790408,-121.767891693\n2014-03-15:10:29:55,Sorrento,fbe0b4bd-ed85-41c8-ad13-b11f93d16c42,0,0\n2014-03-15:10:29:55,Ronin,284ff674-a65d-4911-994f-70a62a341f00,33.9543675097,-118.014486317\n2014-03-15:10:29:55,MeeToo,d248ea6b-f0bb-48ac-91c1-85231601da70,33.9572342033,-117.919480307\n2014-03-15:10:29:55,Sorrento,d9f856a2-1231-4a12-810f-396c4132ee5e,32.121348761,-111.427626492\n2014-03-15:10:29:55,Sorrento,3f73e5a3-6a93-4f0e-833c-3cba09dd1353,36.1570242981,-114.565201682\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262783_-804333296",
      "id": "20200120-024106_1698475884",
      "dateCreated": "2021-01-31 22:14:22.783",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe lines in the file should all look similar to this, with all fields delimited by commas.\n```pyspark\n 2014-03-15:10:10:20,Sorrento,8cc3b47e-bd01-4482- b500-28f2342679af,33.6894754264,-117.543308253\n```\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.783",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eThe lines in the file should all look similar to this, with all fields delimited by commas.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003e 2014-03-15:10:10:20,Sorrento,8cc3b47e-bd01-4482- b500-28f2342679af,33.6894754264,-117.543308253\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262783_5425247",
      "id": "20210121-200803_1047825580",
      "dateCreated": "2021-01-31 22:14:22.783",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Bonus Exercise 2: Convert Multi-line XML files to CSV files\nOne of the common uses for RDDs in core Spark is to transform data from unstructured or semi-structured sources or formats that are not supported by Spark SQL to structured formats you can use with Spark SQL.\nIn this exercise, you will convert a set of whole-file XML records to a CSV file that can be read into a DataFrame.\nReview the data on the local Linux filesystem in the directory /home/training/training_materials/devsh/data/activations. \nEach XML file contains data for all the devices activated by customers during a specific month.\nSample input data:\n```xml\n\u003cactivations\u003e\n\u003cactivation timestamp\u003d\"1225499258\" type\u003d\"phone\"\u003e\n\u003caccount-number\u003e316\u003c/account-number\u003e\n\u003cdevice-id\u003e d61b6971-33e1-42f0-bb15-aa2ae3cd8680\n\u003c/device-id\u003e \u003cphone-number\u003e5108307062\u003c/phone-number\u003e \u003cmodel\u003eiFruit 1\u003c/model\u003e\n   \u003c/activation\u003e\n...\n\u003c/activations\u003e\n```\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.783",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch3\u003eBonus Exercise 2: Convert Multi-line XML files to CSV files\u003c/h3\u003e\n\u003cp\u003eOne of the common uses for RDDs in core Spark is to transform data from unstructured or semi-structured sources or formats that are not supported by Spark SQL to structured formats you can use with Spark SQL.\n\u003cbr  /\u003eIn this exercise, you will convert a set of whole-file XML records to a CSV file that can be read into a DataFrame.\n\u003cbr  /\u003eReview the data on the local Linux filesystem in the directory /home/training/training_materials/devsh/data/activations.\n\u003cbr  /\u003eEach XML file contains data for all the devices activated by customers during a specific month.\n\u003cbr  /\u003eSample input data:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"xml\"\u003e\u0026lt;activations\u0026gt;\n\u0026lt;activation timestamp\u003d\"1225499258\" type\u003d\"phone\"\u0026gt;\n\u0026lt;account-number\u0026gt;316\u0026lt;/account-number\u0026gt;\n\u0026lt;device-id\u0026gt; d61b6971-33e1-42f0-bb15-aa2ae3cd8680\n\u0026lt;/device-id\u0026gt; \u0026lt;phone-number\u0026gt;5108307062\u0026lt;/phone-number\u0026gt; \u0026lt;model\u0026gt;iFruit 1\u0026lt;/model\u0026gt;\n   \u0026lt;/activation\u0026gt;\n...\n\u0026lt;/activations\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262783_927786586",
      "id": "20210121-200905_1197593010",
      "dateCreated": "2021-01-31 22:14:22.783",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "21 - Copy the entire activations directory to /devsh_loudacre in HDFS",
      "text": "%sh\nhdfs dfs -rm -r -skipTrash /devsh_loudacre/activations\nhdfs dfs -put /home/training/training_materials/devsh/data/activations /devsh_loudacre",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.783",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "rm: `/devsh_loudacre/activations\u0027: No such file or directory\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262783_548974226",
      "id": "20200120-025020_1285199608",
      "dateCreated": "2021-01-31 22:14:22.783",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\nhdfs dfs -ls /devsh_loudacre/activations\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.783",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Found 66 items\n-rw-r--r--   3 zeppelin supergroup      19044 2021-01-23 14:20 /devsh_loudacre/activations/2008-10.xml\n-rw-r--r--   3 zeppelin supergroup      73748 2021-01-23 14:20 /devsh_loudacre/activations/2008-11.xml\n-rw-r--r--   3 zeppelin supergroup      68764 2021-01-23 14:20 /devsh_loudacre/activations/2008-12.xml\n-rw-r--r--   3 zeppelin supergroup      90337 2021-01-23 14:20 /devsh_loudacre/activations/2009-01.xml\n-rw-r--r--   3 zeppelin supergroup      67655 2021-01-23 14:20 /devsh_loudacre/activations/2009-02.xml\n-rw-r--r--   3 zeppelin supergroup      86243 2021-01-23 14:20 /devsh_loudacre/activations/2009-03.xml\n-rw-r--r--   3 zeppelin supergroup      82718 2021-01-23 14:20 /devsh_loudacre/activations/2009-04.xml\n-rw-r--r--   3 zeppelin supergroup      90148 2021-01-23 14:20 /devsh_loudacre/activations/2009-05.xml\n-rw-r--r--   3 zeppelin supergroup      88713 2021-01-23 14:20 /devsh_loudacre/activations/2009-06.xml\n-rw-r--r--   3 zeppelin supergroup      86835 2021-01-23 14:20 /devsh_loudacre/activations/2009-07.xml\n-rw-r--r--   3 zeppelin supergroup      79114 2021-01-23 14:20 /devsh_loudacre/activations/2009-08.xml\n-rw-r--r--   3 zeppelin supergroup      83012 2021-01-23 14:20 /devsh_loudacre/activations/2009-09.xml\n-rw-r--r--   3 zeppelin supergroup      91007 2021-01-23 14:20 /devsh_loudacre/activations/2009-10.xml\n-rw-r--r--   3 zeppelin supergroup      93132 2021-01-23 14:20 /devsh_loudacre/activations/2009-11.xml\n-rw-r--r--   3 zeppelin supergroup      96328 2021-01-23 14:20 /devsh_loudacre/activations/2009-12.xml\n-rw-r--r--   3 zeppelin supergroup     192394 2021-01-23 14:20 /devsh_loudacre/activations/2010-01.xml\n-rw-r--r--   3 zeppelin supergroup     191631 2021-01-23 14:20 /devsh_loudacre/activations/2010-02.xml\n-rw-r--r--   3 zeppelin supergroup     200690 2021-01-23 14:20 /devsh_loudacre/activations/2010-03.xml\n-rw-r--r--   3 zeppelin supergroup     200510 2021-01-23 14:20 /devsh_loudacre/activations/2010-04.xml\n-rw-r--r--   3 zeppelin supergroup     227033 2021-01-23 14:20 /devsh_loudacre/activations/2010-05.xml\n-rw-r--r--   3 zeppelin supergroup     235350 2021-01-23 14:20 /devsh_loudacre/activations/2010-06.xml\n-rw-r--r--   3 zeppelin supergroup     230267 2021-01-23 14:20 /devsh_loudacre/activations/2010-07.xml\n-rw-r--r--   3 zeppelin supergroup     241761 2021-01-23 14:20 /devsh_loudacre/activations/2010-08.xml\n-rw-r--r--   3 zeppelin supergroup     234168 2021-01-23 14:20 /devsh_loudacre/activations/2010-09.xml\n-rw-r--r--   3 zeppelin supergroup     237083 2021-01-23 14:20 /devsh_loudacre/activations/2010-10.xml\n-rw-r--r--   3 zeppelin supergroup     209493 2021-01-23 14:20 /devsh_loudacre/activations/2010-11.xml\n-rw-r--r--   3 zeppelin supergroup     235910 2021-01-23 14:20 /devsh_loudacre/activations/2010-12.xml\n-rw-r--r--   3 zeppelin supergroup     441580 2021-01-23 14:20 /devsh_loudacre/activations/2011-01.xml\n-rw-r--r--   3 zeppelin supergroup     421089 2021-01-23 14:20 /devsh_loudacre/activations/2011-02.xml\n-rw-r--r--   3 zeppelin supergroup     472902 2021-01-23 14:20 /devsh_loudacre/activations/2011-03.xml\n-rw-r--r--   3 zeppelin supergroup     456871 2021-01-23 14:20 /devsh_loudacre/activations/2011-04.xml\n-rw-r--r--   3 zeppelin supergroup     466384 2021-01-23 14:20 /devsh_loudacre/activations/2011-05.xml\n-rw-r--r--   3 zeppelin supergroup     454844 2021-01-23 14:20 /devsh_loudacre/activations/2011-06.xml\n-rw-r--r--   3 zeppelin supergroup     466854 2021-01-23 14:20 /devsh_loudacre/activations/2011-07.xml\n-rw-r--r--   3 zeppelin supergroup     483014 2021-01-23 14:20 /devsh_loudacre/activations/2011-08.xml\n-rw-r--r--   3 zeppelin supergroup     464367 2021-01-23 14:20 /devsh_loudacre/activations/2011-09.xml\n-rw-r--r--   3 zeppelin supergroup     500909 2021-01-23 14:20 /devsh_loudacre/activations/2011-10.xml\n-rw-r--r--   3 zeppelin supergroup     477224 2021-01-23 14:20 /devsh_loudacre/activations/2011-11.xml\n-rw-r--r--   3 zeppelin supergroup     506646 2021-01-23 14:20 /devsh_loudacre/activations/2011-12.xml\n-rw-r--r--   3 zeppelin supergroup     979534 2021-01-23 14:20 /devsh_loudacre/activations/2012-01.xml\n-rw-r--r--   3 zeppelin supergroup     945789 2021-01-23 14:20 /devsh_loudacre/activations/2012-02.xml\n-rw-r--r--   3 zeppelin supergroup    1010401 2021-01-23 14:20 /devsh_loudacre/activations/2012-03.xml\n-rw-r--r--   3 zeppelin supergroup     994863 2021-01-23 14:20 /devsh_loudacre/activations/2012-04.xml\n-rw-r--r--   3 zeppelin supergroup    1005624 2021-01-23 14:20 /devsh_loudacre/activations/2012-05.xml\n-rw-r--r--   3 zeppelin supergroup     957156 2021-01-23 14:20 /devsh_loudacre/activations/2012-06.xml\n-rw-r--r--   3 zeppelin supergroup    1028510 2021-01-23 14:20 /devsh_loudacre/activations/2012-07.xml\n-rw-r--r--   3 zeppelin supergroup    1055421 2021-01-23 14:20 /devsh_loudacre/activations/2012-08.xml\n-rw-r--r--   3 zeppelin supergroup    1003936 2021-01-23 14:20 /devsh_loudacre/activations/2012-09.xml\n-rw-r--r--   3 zeppelin supergroup    1066257 2021-01-23 14:20 /devsh_loudacre/activations/2012-10.xml\n-rw-r--r--   3 zeppelin supergroup    1000719 2021-01-23 14:20 /devsh_loudacre/activations/2012-11.xml\n-rw-r--r--   3 zeppelin supergroup    1045239 2021-01-23 14:20 /devsh_loudacre/activations/2012-12.xml\n-rw-r--r--   3 zeppelin supergroup    1081374 2021-01-23 14:20 /devsh_loudacre/activations/2013-01.xml\n-rw-r--r--   3 zeppelin supergroup     984057 2021-01-23 14:20 /devsh_loudacre/activations/2013-02.xml\n-rw-r--r--   3 zeppelin supergroup    1115803 2021-01-23 14:20 /devsh_loudacre/activations/2013-03.xml\n-rw-r--r--   3 zeppelin supergroup    1079565 2021-01-23 14:20 /devsh_loudacre/activations/2013-04.xml\n-rw-r--r--   3 zeppelin supergroup    1092603 2021-01-23 14:20 /devsh_loudacre/activations/2013-05.xml\n-rw-r--r--   3 zeppelin supergroup    1066438 2021-01-23 14:20 /devsh_loudacre/activations/2013-06.xml\n-rw-r--r--   3 zeppelin supergroup    1133909 2021-01-23 14:20 /devsh_loudacre/activations/2013-07.xml\n-rw-r--r--   3 zeppelin supergroup    1137010 2021-01-23 14:20 /devsh_loudacre/activations/2013-08.xml\n-rw-r--r--   3 zeppelin supergroup    1059769 2021-01-23 14:20 /devsh_loudacre/activations/2013-09.xml\n-rw-r--r--   3 zeppelin supergroup    1132497 2021-01-23 14:20 /devsh_loudacre/activations/2013-10.xml\n-rw-r--r--   3 zeppelin supergroup    6816957 2021-01-23 14:20 /devsh_loudacre/activations/2013-11.xml\n-rw-r--r--   3 zeppelin supergroup    3734204 2021-01-23 14:20 /devsh_loudacre/activations/2013-12.xml\n-rw-r--r--   3 zeppelin supergroup    3516581 2021-01-23 14:20 /devsh_loudacre/activations/2014-01.xml\n-rw-r--r--   3 zeppelin supergroup    2878103 2021-01-23 14:20 /devsh_loudacre/activations/2014-02.xml\n-rw-r--r--   3 zeppelin supergroup    1316093 2021-01-23 14:20 /devsh_loudacre/activations/2014-03.xml\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262783_499563402",
      "id": "20210123-141950_1632005471",
      "dateCreated": "2021-01-31 22:14:22.783",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\nhdfs dfs -cat /devsh_loudacre/activations/2008-10.xml",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.787",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cactivations\u003e\n\t  \u003cactivation timestamp\u003d\"1225462088\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e9763\u003c/account-number\u003e\n\t    \u003cdevice-id\u003edebea35e-3ecd-4ee7-b0dd-ad428d953f32\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7600763387\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225461447\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e426\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e38a1566d-524e-4137-bad8-b597d09b54b0\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5102521038\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225446947\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e383\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e513024a3-a828-4674-9ff6-041e9a851f18\u003c/device-id\u003e\n\t    \u003cphone-number\u003e9162206560\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225445908\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e404\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e93d7d0eb-7551-4e11-ab59-91f34c04378f\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6506862748\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225444099\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e393\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e75faa3a2-31d6-48ec-a1a9-da4c882c7b75\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6504786402\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225421991\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e53\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ea6482e48-d347-4ec5-b010-9d9a3b13d999\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6503155055\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225412236\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e96\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e351a0384-9af6-4621-ada8-3eba9fb2734c\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4152163825\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225406348\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e283\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e04ad366c-c023-4d01-8493-8ec97d3ff5cc\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5109683453\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225400017\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e464\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ee4ceefc4-8765-4beb-8b10-9b3d73eec535\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6504367851\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225386391\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e475\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e31fe0811-c4fb-40b8-bc59-8386fe2f5d8e\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6504313792\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225371984\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e479\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e38f76751-3236-4e99-80c9-c4b0a030108e\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6507811206\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225355475\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e306\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ed743093b-8bcf-4ede-a475-4bc29936bc5e\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4158787317\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225349055\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e14045\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e1f568e8d-268a-4171-8a50-94c70fbfdf90\u003c/device-id\u003e\n\t    \u003cphone-number\u003e9098824980\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225347793\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e6482\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ec14cbc3d-8b55-49bb-931d-7b2472aaa750\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4082887060\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225345397\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e349\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e04c2fc8e-2f4f-4c7a-ad26-146c26deec87\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6502434241\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225333766\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e124\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e74d1341a-8da9-4de7-86f6-ec5285665ef2\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5103920538\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225333728\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e247\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e8ca7ba2f-5b8a-4574-abbb-de5a18221894\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6509604844\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225320127\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e88\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e9f7daca9-5faf-4cfd-b863-85d510464945\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6501458572\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225319701\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e2939\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e18970270-86f0-4bac-ba03-24eb8518f082\u003c/device-id\u003e\n\t    \u003cphone-number\u003e9161294398\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225317616\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e314\u003c/account-number\u003e\n\t    \u003cdevice-id\u003eae3cb61f-5318-4b74-bb05-9de91a66bb10\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6509019772\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225315853\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e396\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e767d106f-4a25-4177-afe5-8f081fc68cd7\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6500312075\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225278009\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e6881\u003c/account-number\u003e\n\t    \u003cdevice-id\u003efb8f6fe5-c2f5-43e5-a0b5-032c1b437989\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5625307326\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225275474\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e234\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e31485143-2104-4f4d-bceb-4866f484e27f\u003c/device-id\u003e\n\t    \u003cphone-number\u003e9166314637\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225246830\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e34209\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e7dcd293d-b59d-48ea-bfe5-af623fa67b81\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7022095507\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225242164\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e369\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e8cadd7a9-b799-4ebb-8314-2b8a9716ed86\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5108109471\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225230097\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e255\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e6d515f2b-4fc8-4916-916f-f7ec7750ee3e\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4159552347\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225229238\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e13\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e9163f7b0-9957-47f2-8a56-cb195ea1adc4\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4153335996\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225174761\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e142\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e558b13f3-783f-4434-a85f-97413146f835\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5109700907\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225161449\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e11\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e678dc546-57ca-47fa-a387-184248f610dd\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5109726353\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225157362\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e61\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ebe33c35d-1fa6-4f61-83e4-439a095ae4cc\u003c/device-id\u003e\n\t    \u003cphone-number\u003e9162581613\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225152905\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e1554\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ece9468cc-8d98-4dc6-90b5-e72a44c64a21\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4153912267\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225149813\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e165\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e52c76b69-c8d2-479c-88af-cbf0e95e3e5e\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5104562352\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225120582\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e128224\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e416578b7-5684-4848-b97a-3587784eaa12\u003c/device-id\u003e\n\t    \u003cphone-number\u003e2133389934\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225118290\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e394\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e6b879605-0cdc-4200-834f-205b74b40dca\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7070593543\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225102200\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e433\u003c/account-number\u003e\n\t    \u003cdevice-id\u003efd12614c-b21c-4b26-a825-4bfd63492149\u003c/device-id\u003e\n\t    \u003cphone-number\u003e9165391636\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225086639\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e448\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e39f94f2b-3a58-49bd-bc48-3885cd42badc\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6503935352\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225078279\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e440\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e0bf181b2-25b7-4541-87d8-15f6d7a0ccb9\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6505467053\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225067942\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e240\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e3966e7ae-0954-4ea7-bde6-b35ee0f39c30\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7079354042\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225061652\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e460\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e5b8530d4-f467-42e3-818d-c81e20cfd1c1\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6500282551\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225058673\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e275\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e42be5c11-8931-46bf-af06-c87c3f580337\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4155493875\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225047870\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e4638\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e7164d9d1-d2e0-439d-9aee-1fd20da48df3\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5101970154\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225039607\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e171\u003c/account-number\u003e\n\t    \u003cdevice-id\u003edc0e941a-90d4-4c84-ac7d-383e276dad84\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5105209310\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1225033098\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e213\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e5c42d2ac-d92f-4ef1-acee-47d39a909b11\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5101004303\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224994511\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e324\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e71a6ed8d-a751-44bf-8b38-320a49c12a9b\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6501654645\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224990765\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e98121\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e9a6d0b23-8845-460d-aa47-91c82d8fc480\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6618825932\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224983389\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e363\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e254ab846-f1d4-4c85-a658-46ee5e848c53\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6505506140\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224956920\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e52\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e330f46cc-de2a-49d3-aa93-6ff761de7d5a\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4151228388\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224956441\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e286\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e78d4f9fe-b6e3-40c2-91d5-18ff95a074e5\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5107058174\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224946254\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e13702\u003c/account-number\u003e\n\t    \u003cdevice-id\u003eb024cf7d-496f-4f6e-bbc1-772d13ca1617\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5416107165\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224944970\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e345\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ecd1c8a9d-066c-4f6f-b08f-dc119d827699\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5103859765\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224938467\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e36906\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e9043cf20-d816-4f17-af72-020767ae14e0\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5411008209\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224907589\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e413\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e0e487cf9-6923-4891-94f7-7b12695b72fd\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5107080443\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224847655\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e459\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e5aff8521-f91b-48f6-a69a-156caa236bd0\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4157500638\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224831370\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e144\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ee7f833e9-276e-4f3b-9710-9d3106a5141a\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5108355566\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224817110\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e373\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e0f7b8628-873a-4d1b-9b86-0bfe40f2f668\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5109247675\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224812967\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e46849\u003c/account-number\u003e\n\t    \u003cdevice-id\u003eb99f88ef-5ad2-4c62-bbc6-ca2756b4467c\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5414191932\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224805157\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e252\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e6c71ca45-ddae-4191-98e8-01f3bc2a1220\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5109508609\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224803105\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e1\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e7eb61253-55cd-4309-8f17-129089fee461\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5100032418\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224782486\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e21566\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e2bebd773-39ac-4d31-a23e-06eb2991ac26\u003c/device-id\u003e\n\t    \u003cphone-number\u003e9165053364\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224781467\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e154\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e1923ef7c-3067-4f7c-93f7-c867bd31a39f\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5106577100\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224778387\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e46168\u003c/account-number\u003e\n\t    \u003cdevice-id\u003efb7f3575-c523-47bf-be76-889a07a5af9c\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5037703631\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224771580\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e3838\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e46ec037a-c72d-4e4a-aff6-a7498dbd8b1f\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6501253886\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224769655\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e21821\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e2cef3c7a-6fbe-42d1-9a7f-19854a959700\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6262624197\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224747397\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e204\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e04d374ba-3441-4aa4-88d9-057c0721ba0f\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7076669246\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224736965\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e131\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ea53f23f2-a57f-4655-90fd-f53a0a05d587\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4151707647\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224729378\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e474\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e4bd55037-72e7-432f-a1b1-2a94a4df9f16\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5102971778\u003c/phone-number\u003e\n\t    \u003cmodel\u003eiFruit 1\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224725663\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e146\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e5c66d63f-3384-49d6-8cba-65a28b34ba30\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7070285635\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224719408\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e2063\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e21b927a6-c4f6-43c0-bc11-abe77abfd6bc\u003c/device-id\u003e\n\t    \u003cphone-number\u003e6503298970\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224688572\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e374\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ecc8ef6ff-93de-4a55-b2ed-888b3bd9740b\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7073442709\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224652877\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e89\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ebbc9f0e7-8315-4ada-832d-56db3083d507\u003c/device-id\u003e\n\t    \u003cphone-number\u003e5104067433\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224652432\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e194\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e7997d06a-664d-45f2-9c1e-4896b1450e28\u003c/device-id\u003e\n\t    \u003cphone-number\u003e7071451183\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224641243\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e269\u003c/account-number\u003e\n\t    \u003cdevice-id\u003e07895a7d-1b66-4b7c-84d7-b1592a03437c\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4153026986\u003c/phone-number\u003e\n\t    \u003cmodel\u003eTitanic 1000\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224628700\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e155\u003c/account-number\u003e\n\t    \u003cdevice-id\u003ecd84b041-5d4e-4fc5-977e-46231507e173\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4153927390\u003c/phone-number\u003e\n\t    \u003cmodel\u003eSorrento F00L\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\t  \u003cactivation timestamp\u003d\"1224585351\" type\u003d\"phone\"\u003e\n\t    \u003caccount-number\u003e405\u003c/account-number\u003e\n\t    \u003cdevice-id\u003eb53bb445-5bc6-489b-9dd5-9de6370a19fe\u003c/device-id\u003e\n\t    \u003cphone-number\u003e4151697001\u003c/phone-number\u003e\n\t    \u003cmodel\u003eMeeToo 1.0\u003c/model\u003e\n\t  \u003c/activation\u003e\n\t  \t\u003c/activations\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262787_1726921525",
      "id": "20210123-142203_648237880",
      "dateCreated": "2021-01-31 22:14:22.787",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "22 - Define convenience functions",
      "text": "%pyspark\n\nimport xml.etree.ElementTree as ElementTree\n\n# Given a string containing XML, parse the string, and \n# return an iterator of activation XML records (Elements) contained in the string\n\ndef getActivations(s):\n    filetree \u003d ElementTree.fromstring(s)\n    return filetree.getiterator(\u0027activation\u0027)\n    \n# Given an activation record (XML Element), return the model name\ndef getModel(activation):\n    return activation.find(\u0027model\u0027).text \n\n# Given an activation record (XML Element), return the account number \ndef getAccount(activation):\n    return activation.find(\u0027account-number\u0027).text \n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.788",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262788_73771626",
      "id": "20200120-025849_1625267335",
      "dateCreated": "2021-01-31 22:14:22.788",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nPython can create a function to help programmers break a program intoo smaller and \nmore modular, more organized, and more manageable program.\nSyntax\n    def function_name(parameters):\n        \"\"\"docstring\"\"\"\n        statement(s)\n        \nThe keyword is def. The function name must be unique. A colon (:) marks the end of the function\nheader. The docsttring is optional. One or more valid Python statements make up the function.\nAll statements must have the same indentation. An optional return statementt to return\na value from the function.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.788",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003ePython can create a function to help programmers break a program intoo smaller and\n\u003cbr  /\u003emore modular, more organized, and more manageable program.\n\u003cbr  /\u003eSyntax\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003edef function_name(parameters):\n    \"\"\"docstring\"\"\"\n    statement(s)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe keyword is def. The function name must be unique. A colon (:) marks the end of the function\n\u003cbr  /\u003eheader. The docsttring is optional. One or more valid Python statements make up the function.\n\u003cbr  /\u003eAll statements must have the same indentation. An optional return statementt to return\n\u003cbr  /\u003ea value from the function.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262788_1650647409",
      "id": "20210123-135713_537762701",
      "dateCreated": "2021-01-31 22:14:22.788",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nCopy and paste this code in the cell below to define convenience functions\n\n```pyspark\nimport xml.etree.ElementTree as ElementTree\n\n# Given a string containing XML, parse the string, and \n# return an iterator of activation XML records (Elements) contained in the string\n\ndef getActivations(s):\n    filetree \u003d ElementTree.fromstring(s)\n    return filetree.getiterator(\u0027activation\u0027)\n    \n# Given an activation record (XML Element), return the model name\ndef getModel(activation):\n    return activation.find(\u0027model\u0027).text \n\n# Given an activation record (XML Element), return the account number \ndef getAccount(activation):\n    return activation.find(\u0027account-number\u0027).text \n```\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-02 00:23:09.468",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eCopy and paste this code in the cell below to define convenience functions\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"pyspark\"\u003eimport xml.etree.ElementTree as ElementTree\n\n# Given a string containing XML, parse the string, and \n# return an iterator of activation XML records (Elements) contained in the string\n\ndef getActivations(s):\n    filetree \u003d ElementTree.fromstring(s)\n    return filetree.getiterator(\u0026#39;activation\u0026#39;)\n    \n# Given an activation record (XML Element), return the model name\ndef getModel(activation):\n    return activation.find(\u0026#39;model\u0026#39;).text \n\n# Given an activation record (XML Element), return the account number \ndef getAccount(activation):\n    return activation.find(\u0026#39;account-number\u0026#39;).text \n\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262788_1514300825",
      "id": "20210121-201202_1917379932",
      "dateCreated": "2021-01-31 22:14:22.788",
      "dateStarted": "2021-02-02 00:23:09.472",
      "dateFinished": "2021-02-02 00:23:09.520",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "23 - Use wholeTextFiles to create an RDD from the activations dataset",
      "text": "%pyspark\n\n# Read XML files into an RDD \nfiles\u003d\"/devsh_loudacre/activations\"\nactivationFiles \u003d sc.wholeTextFiles(files)",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.791",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262791_663017579",
      "id": "20200120-030152_1371790066",
      "dateCreated": "2021-01-31 22:14:22.791",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nUse wholeTextFiles to create an RDD from the activations dataset. \nThe resulting RDD will consist of tuples, in which the first value is the name of the file, and \nthe second value is the contents of the file (XML) as a string.\n\nIn Python a tuple is an immutable list.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.791",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eUse wholeTextFiles to create an RDD from the activations dataset.\n\u003cbr  /\u003eThe resulting RDD will consist of tuples, in which the first value is the name of the file, and\n\u003cbr  /\u003ethe second value is the contents of the file (XML) as a string.\u003c/p\u003e\n\u003cp\u003eIn Python a tuple is an immutable list.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262791_-1523419355",
      "id": "20210121-201403_865291080",
      "dateCreated": "2021-01-31 22:14:22.791",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "24 - Parse each file (as a string) into a collection of activation XML records",
      "text": "%pyspark\n\nactivationRecords \u003d activationFiles.flatMap(lambda pair: getActivations(pair[1]))",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.791",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262791_1899192573",
      "id": "20200120-030459_712323819",
      "dateCreated": "2021-01-31 22:14:22.791",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe Spark `map` transformation creates a new RDD after applying the function on every element\nin the RDD. This transformation always returns the same number of elements as input. The\nSpark `flatMap` transformation also creates a new RDD after applying the function on every\nelement in the RDD. This transformation can have the same count or more number of elements. A\ncommon use of `flatMap` is to split records by a space and then flatten the RDD to list of\nsingle words.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.791",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eThe Spark \u003ccode\u003emap\u003c/code\u003e transformation creates a new RDD after applying the function on every element\n\u003cbr  /\u003ein the RDD. This transformation always returns the same number of elements as input. The\n\u003cbr  /\u003eSpark \u003ccode\u003eflatMap\u003c/code\u003e transformation also creates a new RDD after applying the function on every\n\u003cbr  /\u003eelement in the RDD. This transformation can have the same count or more number of elements. A\n\u003cbr  /\u003ecommon use of \u003ccode\u003eflatMap\u003c/code\u003e is to split records by a space and then flatten the RDD to list of\n\u003cbr  /\u003esingle words.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262791_-1513716464",
      "id": "20210123-140905_373751837",
      "dateCreated": "2021-01-31 22:14:22.791",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nEach XML file can contain many activation records; use `flatMap` to map the contents of each file to a collection \nof XML records by calling the provided `getActivations` function. `getActivations` takes an XML string, parses it, \nand returns a collection of XML records; `flatMap` maps each record to a separate RDD element.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.791",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eEach XML file can contain many activation records; use \u003ccode\u003eflatMap\u003c/code\u003e to map the contents of each file to a collection\n\u003cbr  /\u003eof XML records by calling the provided \u003ccode\u003egetActivations\u003c/code\u003e function. \u003ccode\u003egetActivations\u003c/code\u003e takes an XML string, parses it,\n\u003cbr  /\u003eand returns a collection of XML records; \u003ccode\u003eflatMap\u003c/code\u003e maps each record to a separate RDD element.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262791_1402762491",
      "id": "20210121-201504_557218695",
      "dateCreated": "2021-01-31 22:14:22.791",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "25 - Map each activation record to a string in the format account-number:model",
      "text": "%pyspark\n\nmodels \u003d activationRecords.map(lambda record: getAccount(record) + \":\" + getModel(record))",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.794",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262792_-1543938295",
      "id": "20200120-030718_323721915",
      "dateCreated": "2021-01-31 22:14:22.792",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nMap each activation record to a string in the format account-number:model. Use the provided `getAccount` and `getModel`\nfunctions to find the values from the activation record.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.795",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eMap each activation record to a string in the format account-number:model. Use the provided \u003ccode\u003egetAccount\u003c/code\u003e and \u003ccode\u003egetModel\u003c/code\u003e\n\u003cbr  /\u003efunctions to find the values from the activation record.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262795_-1328829488",
      "id": "20210121-201717_189950136",
      "dateCreated": "2021-01-31 22:14:22.795",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "26 - Save the formatted strings to a text file in the directory /devsh_loudacre/ account-models",
      "text": "%pyspark\n\nsc.setJobGroup(\"Transforming data with RDDs - Bonus Exercise 2\",\"Save the formatted strings to a text file\")\nmodels.saveAsTextFile(\"/devsh_loudacre/account-models\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.796",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_-1177892735",
      "id": "20200120-030915_1401739400",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\nhdfs dfs -ls /devsh_loudacre/account-models\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.796",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Found 3 items\n-rw-r--r--   3 livy supergroup          0 2021-01-23 14:24 /devsh_loudacre/account-models/_SUCCESS\n-rw-r--r--   3 livy supergroup    1858986 2021-01-23 14:24 /devsh_loudacre/account-models/part-00000\n-rw-r--r--   3 livy supergroup    1885226 2021-01-23 14:24 /devsh_loudacre/account-models/part-00001\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_-1044376967",
      "id": "20210123-142429_1219685940",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\nhdfs dfs -head /devsh_loudacre/account-models/part-00000",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.796",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "9763:MeeToo 1.0\n426:Titanic 1000\n383:Sorrento F00L\n404:MeeToo 1.0\n393:iFruit 1\n53:MeeToo 1.0\n96:iFruit 1\n283:Sorrento F00L\n464:MeeToo 1.0\n475:Titanic 1000\n479:iFruit 1\n306:Titanic 1000\n14045:MeeToo 1.0\n6482:Sorrento F00L\n349:MeeToo 1.0\n124:MeeToo 1.0\n247:MeeToo 1.0\n88:Sorrento F00L\n2939:Titanic 1000\n314:MeeToo 1.0\n396:MeeToo 1.0\n6881:MeeToo 1.0\n234:iFruit 1\n34209:Titanic 1000\n369:MeeToo 1.0\n255:iFruit 1\n13:iFruit 1\n142:Titanic 1000\n11:iFruit 1\n61:iFruit 1\n1554:MeeToo 1.0\n165:Titanic 1000\n128224:MeeToo 1.0\n394:MeeToo 1.0\n433:MeeToo 1.0\n448:iFruit 1\n440:Sorrento F00L\n240:MeeToo 1.0\n460:MeeToo 1.0\n275:Sorrento F00L\n4638:Titanic 1000\n171:Titanic 1000\n213:Sorrento F00L\n324:Sorrento F00L\n98121:MeeToo 1.0\n363:iFruit 1\n52:Titanic 1000\n286:iFruit 1\n13702:Titanic 1000\n345:MeeToo 1.0\n36906:Titanic 1000\n413:iFruit 1\n459:Titanic 1000\n144:Sorrento F00L\n373:Titanic 1000\n46849:Sorrento F00L\n252:Titanic 1000\n1:Titanic 1000\n21566:Titanic 1000\n154:Titanic 1000\n46168:iFruit 1\n3838:Titanic 1000\n21821:MeeToo 1.0\n204:iFruit 1\n131:M"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_-640275251",
      "id": "20210123-142455_1526667445",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Tear Down\n---",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.796",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eTear Down\u003c/h1\u003e\n\u003chr /\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_1943307446",
      "id": "20200830-194854_838260781",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Delete Livy session",
      "text": "%sh\n\n#sessionId\u003d$(curl -s localhost:8998/sessions | jq \u0027.sessions[0].id\u0027)\ncurl -s localhost:8998/sessions/0 -X DELETE",
      "user": "anonymous",
      "dateUpdated": "2021-02-02 05:13:03.786",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "org.apache.zeppelin.interpreter.InterpreterNotFoundException: No interpreter is binded to this note: 2FYN33BJC"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_-1681944209",
      "id": "20200830-195039_518625763",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "ERROR",
      "errorMessage": "org.apache.zeppelin.interpreter.InterpreterNotFoundException: No interpreter is binded to this note: 2FYN33BJC\n\tat org.apache.zeppelin.interpreter.InterpreterFactory.getInterpreter(InterpreterFactory.java:60)\n\tat org.apache.zeppelin.notebook.Paragraph.getBindedInterpreter(Paragraph.java:243)\n\tat org.apache.zeppelin.notebook.Paragraph.execute(Paragraph.java:351)\n\tat org.apache.zeppelin.notebook.Note.run(Note.java:683)\n\tat org.apache.zeppelin.socket.NotebookServer.persistAndExecuteSingleParagraph(NotebookServer.java:1881)\n\tat org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1840)\n\tat org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:262)\n\tat org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:59)\n\tat org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:189)\n\tat org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)\n\tat org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:66)\n\tat org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:158)\n\tat org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:162)\n\tat org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:459)\n\tat org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:182)\n\tat org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:105)\n\tat org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:142)\n\tat org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:85)\n\tat org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:220)\n\tat org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:219)\n\tat org.eclipse.jetty.websocket.common.Parser.parse(Parser.java:244)\n\tat org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.readParse(AbstractWebSocketConnection.java:559)\n\tat org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:390)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)\n\tat java.lang.Thread.run(Thread.java:748)\n",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Additional resources",
      "text": "%md\nWe hope you\u0027ve enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.796",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 10.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_688883365",
      "id": "20181116-135131_93712280",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%angular\n\u003c/br\u003e\n\u003c/br\u003e\n\u003c/br\u003e\n\u003c/br\u003e\n\u003ccenter\u003e\n\u003ca href\u003d\"https://www.cloudera.com/about/training/courses.html\"\u003e\n  \u003cimg src\u003d\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt\u003d\"Cloudera Educational Services\" style\u003d\"width:280px;height:40px;border:0;\" align\u003d\"middle\"\u003e\n\u003c/a\u003e\n\u003c/center\u003e\n\u003c/br\u003e\n\u003c/br\u003e",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.796",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 2.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_-1009757686",
      "id": "20200110-154537_1406191376",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%angular\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-31 22:14:22.797",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1612131262796_1694957352",
      "id": "20200110-162013_302547143",
      "dateCreated": "2021-01-31 22:14:22.796",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "/DevSH/Labs/Pyspark/TransformingDataWithRDDs",
  "id": "2FYN33BJC",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}